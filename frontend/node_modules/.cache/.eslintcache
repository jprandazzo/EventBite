[{"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/index.js":"1","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/App.js":"2","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/sessionReducer.js":"3","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/reportWebVitals.js":"4","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/eventsReducer.js":"5","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/usersReducer.js":"6","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/index.js":"7","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/csrf.js":"8","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/SignUpForm.js":"9","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/OrganizerEventIndex.js":"10","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/EditEvent.js":"11","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/AllEvents.js":"12","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/SplashPage.js":"13","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/ShowEvent.js":"14","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/SignInForm.js":"15","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/CreateEvent.js":"16","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/SearchEvents.js":"17","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/errorPages/NotFoundErrorPage.js":"18","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/NavBar/NavBarLoggedIn.js":"19","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/NavBar/NavBarLoggedOut.js":"20","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/ordersReducer.js":"21","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/orders/OrderIndex.js":"22","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/orders/OrderShow.js":"23"},{"size":1577,"mtime":1690815115304,"results":"24","hashOfConfig":"25"},{"size":1904,"mtime":1690743905448,"results":"26","hashOfConfig":"25"},{"size":2571,"mtime":1690661625444,"results":"27","hashOfConfig":"25"},{"size":362,"mtime":1689882403602,"results":"28","hashOfConfig":"25"},{"size":2661,"mtime":1690810353009,"results":"29","hashOfConfig":"25"},{"size":2020,"mtime":1690703262942,"results":"30","hashOfConfig":"25"},{"size":873,"mtime":1690683800147,"results":"31","hashOfConfig":"25"},{"size":568,"mtime":1690693397997,"results":"32","hashOfConfig":"25"},{"size":6724,"mtime":1690590156941,"results":"33","hashOfConfig":"25"},{"size":1864,"mtime":1690810901667,"results":"34","hashOfConfig":"25"},{"size":8592,"mtime":1690671153566,"results":"35","hashOfConfig":"25"},{"size":1468,"mtime":1690668196183,"results":"36","hashOfConfig":"25"},{"size":1733,"mtime":1690811972075,"results":"37","hashOfConfig":"25"},{"size":4954,"mtime":1690812083136,"results":"38","hashOfConfig":"25"},{"size":6691,"mtime":1690811333346,"results":"39","hashOfConfig":"25"},{"size":10368,"mtime":1690821018434,"results":"40","hashOfConfig":"25"},{"size":1321,"mtime":1690810855940,"results":"41","hashOfConfig":"25"},{"size":299,"mtime":1690576131976,"results":"42","hashOfConfig":"25"},{"size":5860,"mtime":1690810782400,"results":"43","hashOfConfig":"25"},{"size":4500,"mtime":1690556710493,"results":"44","hashOfConfig":"25"},{"size":2011,"mtime":1690700039135,"results":"45","hashOfConfig":"25"},{"size":2321,"mtime":1690705125793,"results":"46","hashOfConfig":"25"},{"size":2483,"mtime":1690707254306,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"rxi2wg",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"58"},"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/index.js",["126","127","128","129","130"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/App.js",["131"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/sessionReducer.js",["132"],[],"import csrfFetch from \"./csrf\"\n\nconst SET_CURRENT_USER = 'session/setCurrentUser'\nconst REMOVE_CURRENT_USER = 'session/removeCurrentUser'\n\nconst setCurrentUser = (user) => ({\n    type: SET_CURRENT_USER,\n    payload: user\n});\n  \nconst removeCurrentUser = () => ({\n    type: REMOVE_CURRENT_USER\n});\n\nexport const getCurrentUser = (state) => {\n    return state.session.user ? state.session.user : null\n}\n\nconst storeCSRFToken = response => {\n    const csrfToken = response.headers.get(\"X-CSRF-Token\");\n    if (csrfToken) sessionStorage.setItem(\"X-CSRF-Token\", csrfToken);\n}\n\nasync function restoreCSRF () {\n    const response = await csrfFetch(\"/api/session\");\n    storeCSRFToken(response)\n    return response\n}\n  \nconst storeCurrentUser = user => {\n    if (user) sessionStorage.setItem(\"currentUser\", JSON.stringify(user));\n    else sessionStorage.removeItem(\"currentUser\");\n}\n\nexport const login = ({ email, password }) => async dispatch => {\n    const response = await csrfFetch(\"/api/session\", {\n      method: \"POST\",\n      body: JSON.stringify({ email, password })\n    });\n    const data = await response.json();\n    \n    storeCurrentUser(data.user);\n    dispatch(setCurrentUser(data.user))\n    return response;\n};\n\nexport const restoreSession = () => async dispatch => {\n    let res = await csrfFetch('/api/session');\n    storeCSRFToken(res);\n    let data = await res.json();\n    storeCurrentUser(data.user);\n    dispatch(setCurrentUser(data.user));\n    return res;\n}\n\nexport const logout = () => async dispatch => {\n    const response = await csrfFetch('/api/session', {\n        method: 'DELETE'\n    });\n    storeCurrentUser(null);\n    dispatch(removeCurrentUser());\n    return response;\n};\n\nexport const signup = user => async dispatch => {\n    const {firstName, lastName, email, password} = user;\n    const response = await csrfFetch('api/users', {\n        method: \"POST\",\n        body: JSON.stringify({\n            firstName,\n            lastName,\n            email,\n            password\n        })\n    });\n    const data = await response.json();\n\n    storeCurrentUser(data.user);\n    dispatch(setCurrentUser(data.user));\n    return response;\n};\n\nconst initialState = {\n    user: JSON.parse(sessionStorage.getItem('currentUser'))\n};\n\nconst sessionReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {...state, user: action.payload};\n        case REMOVE_CURRENT_USER:\n            return {...state, user: null};\n        default:\n            return state;\n    }\n};\n\nexport default sessionReducer\n",[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/reportWebVitals.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/eventsReducer.js",["133"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/usersReducer.js",["134"],[],"import csrfFetch from \"./csrf\"\n\nconst RECEIVE_USER = 'users/receiveUser'\nconst REMOVE_USER = 'users/removeUser'\nconst RECEIVE_USER_EVENTS = 'receiveUserEvents'\nconst RECEIVE_USER_ORDERS = 'receiveUserOrders';\n\nexport const getUser = (userId) => state => {\n    return state.users ? state.users[userId] : null\n}\n\nexport const fetchUser = (userId) => async dispatch => {\n    const response = await fetch(`/api/users/${userId}`)\n    const data = await response.json();\n    dispatch({\n        type: RECEIVE_USER,\n        user: data.user\n    })\n}\n\nexport const fetchUserEvents = (userId) => async dispatch => {\n    const response = await fetch(`/api/users/${userId}`);\n    const data = await response.json();\n\n    dispatch({\n        type: RECEIVE_USER_EVENTS,\n        user: data.user,\n        events: data.events,\n        orders: data.orders\n    })\n\n}\n\nexport const updateUser = (user) => async dispatch => {\n    const response = await csrfFetch(`/api/users/${user.id}`, {\n        method: 'PATCH',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(user)\n    })\n    const data = await response.json();\n\n    dispatch({\n        type: RECEIVE_USER,\n        user: data\n    })\n}\n\nexport const deleteUser = (userId) => async dispatch => {\n    const response = await csrfFetch(`/api/users/${userId}`, {\n        method: 'DELETE',\n        headers: {'Content-Type': 'application/json'},\n    })\n\n    if (response.ok) {\n        dispatch({\n            type: REMOVE_USER,\n            userId: userId\n        })\n    }\n}\n\nexport default function usersReducer(state = {}, action) {\n    let newState = {...state};\n\n    switch(action.type) {\n        case RECEIVE_USER:\n            newState[action.user.id] = action.user;\n            return newState;\n        case RECEIVE_USER_EVENTS:\n            newState[action.user.id] = action.user\n            return newState\n        case REMOVE_USER:\n            delete newState[action.userId];\n            return newState;\n        default:\n            return state;\n    }\n}\n","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/index.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/csrf.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/SignUpForm.js",["135","136"],[],"import React, { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { useHistory, Link } from 'react-router-dom';\nimport * as sessionActions from \"../../store/sessionReducer\"\nimport './Authentication.css';\n\nexport default function SignUpForm () {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // need to set a sessionUser such that if present, redirect and do \n    // not allow user to sign up\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [errors, setErrors] = useState([]);\n\n    const focusInput = (e) => {\n        //blur anything that's currently focused\n        Array.from(document.querySelectorAll('.input-field-input'))\n            .forEach(el => {\n                el.blur()\n            })\n        \n        //whichever div is clicked, find its input and focus it\n        if (e.target.className === 'auth-input-box') {\n\n            let textFieldTitle = Array.from(e.target.childNodes).filter(el => el.className === 'signup-signin-field-title')[0]\n            let input = e.target.childNodes[2].childNodes[0].childNodes[0]\n            input.focus()\n        } else if (e.target.className === 'signup-signin-field-title') {\n            \n            let outerDiv = e.target.parentNode\n            let input = outerDiv.childNodes[2].childNodes[0].childNodes[0]\n            input.focus()\n\n        } else if (e.target.className === 'signup-signin-field-input') {\n            e.target.focus()\n        }\n    }\n\n    function setClosestDivsActive(e){\n\n        //add 'focus' class to both surrounding divs of the input\n        //that was focused\n        let outerDiv = e.target.closest('div')\n        outerDiv.classList.add('active-div')\n\n        let textFieldTitle = Array.from(outerDiv.childNodes).filter(el => el.className === 'signup-signin-field-title')[0]\n        textFieldTitle.classList.add('active-input')\n    }\n\n    function setClosestDivsInactive(e) {\n        //remove 'focus' class from both surrounding divs of the input\n        //that was blurred\n        let outerDiv = e.target.closest('div')\n        outerDiv.classList.remove('active-div')\n        let textFieldTitle = Array.from(outerDiv.childNodes).filter(el => el.classList.contains('signup-signin-field-title'))[0]\n        textFieldTitle.classList.remove('active-input')\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        let firstName = 'joe';\n        let lastName = 'ra';\n\n        return dispatch(sessionActions.signup({email, password, firstName, lastName}))\n            .catch(async (res) => {\n                let data;\n                try {\n                // .clone() essentially allows you to read the response body twice\n                data = await res.clone().json();\n                } catch {\n                data = await res.text(); // Will hit this case if, e.g., server is down\n                }\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n            })\n            .then(() =>{history.push('/')});\n    }\n    return(\n        <>\n            <main onClick={e => focusInput(e)}>\n            <section className='split split-left' id='signin'>\n                    <div className='centered'>\n                        <div id='eblogo-auth'>\n                            <Link to='/'>\n                                <img src='https://cdn.evbstatic.com/s3-build/prod/1322331-rc2023-07-24_16.04-5e36c7c/django/images/logos/eb_orange_on_white_1200x630.png' />\n                            </Link>\n                        </div>\n                        <h1 id='signup-signin-h1'>Create an account</h1>\n\n                        <form>\n                            <div className='auth-input-box'>\n                                <div className='signup-signin-field-title'>\n                                    Email address\n                                </div>\n\n                                <br />\n\n                                <span >\n                                    <label>\n                                        <input className='signup-signin-field-input'\n                                               type='text' \n                                               name='email'\n                                               onChange={e => setEmail(e.target.value)}\n                                               onFocus={e => setClosestDivsActive(e)}\n                                               onBlur={e => setClosestDivsInactive(e)}\n                                        />\n                                    </label>\n                                </span>\n                            </div>\n\n                            <br />\n\n                            <div className='auth-input-box'>\n                                <div className='signup-signin-field-title'>\n                                    Password\n                                </div>\n\n                                <br />\n\n                                <span >\n                                    <label>\n                                        <input className='signup-signin-field-input'\n                                               type='password' \n                                               name='password'\n                                               onChange={e => setPassword(e.target.value)}\n                                               onFocus={e => setClosestDivsActive(e)}\n                                               onBlur={e => setClosestDivsInactive(e)}\n                                        />\n                                    </label>\n                                </span>\n                            </div>\n\n                            <br />\n\n                            <ul>\n                                {errors.map(error => <li key={error}>{error}</li>)}\n                            </ul>\n\n                            <br />\n\n                            <button className='auth-button' onClick={handleSubmit}>\n                                Sign up\n                            </button>\n                        </form>\n                        <div className='signup-signin-switch'>\n                            <Link to='/signin'>Log in</Link>\n                        </div>\n                    </div>\n                </section>\n                <section className='split split-right' id='auth-side-photo'>\n                    <div className='centered login-image'>\n                        {/* <img src='https://i.ibb.co/Qp4jyky/Screenshot-2023-07-26-at-1-38-15-PM.png' /> */}\n                    </div>\n                </section>\n            </main>\n        </>\n    )\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/OrganizerEventIndex.js",["137","138"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/EditEvent.js",["139","140","141"],[],"import React, { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport * as eventActions from \"../../store/eventsReducer\"\nimport * as sessionActions from '../../store/sessionReducer'\nimport NavBarLoggedIn from \"../NavBar/NavBarLoggedIn\";\nimport NotFoundErrorPage from \"../errorPages/NotFoundErrorPage\";\nimport './EditEvent.css'\n\nexport default function EditEvent () {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    let current_user = useSelector(sessionActions.getCurrentUser)\n    \n    const {eventId} = useParams();\n\n    const [doneLoading, setDoneLoading] = useState(false);\n    const [event, setEvent] = useState(undefined)\n\n    useEffect(() =>{\n        const awaitFetch = async () => {\n            const res = await dispatch(eventActions.fetchEvent(eventId))\n            setEvent(res[0])\n            setDoneLoading(res[1])\n        }\n        awaitFetch()\n    }, [])\n    \n    useEffect(() =>{\n        setTitle(event ? event.title : '')\n        setOrganizerName(event ? event.organizerName : '')\n        setEventType(event ? event.eventType : '')\n        setEventCategory(event ? event.eventCategory : '')\n        setVenueName(event ? event.venueName : '')\n        setAddress(event ? event.address : '')\n        setTimestampStart(event ? event.timestampStart : '')\n        setTimestampEnd(event ? event.timestampEnd : '')\n        setCapacity(event ? event.capacity : '')\n        setPrice(event ? event.price : '')\n        setDescription(event ? event.description : '')\n    },[event])\n\n    const [title, setTitle] = useState(event ? event.title : '')\n    const [organizerName, setOrganizerName] = useState(event ? event.organizerName : '')\n    const [eventType, setEventType] = useState(event ? event.eventType : '')\n    const [eventCategory, setEventCategory] = useState(event ? event.eventCategory : '')\n    const [venueName, setVenueName] = useState(event ? event.venueName : '')\n    const [address, setAddress] = useState(event ? event.address : '')\n    const [timestampStart, setTimestampStart] = useState(event ? event.timestampStart : '')\n    const [timestampEnd, setTimestampEnd] = useState(event ? event.timestampEnd : '')\n    const [capacity, setCapacity] = useState(event ? event.capacity : 0)\n    const [price, setPrice] = useState(event ? event.price : 0);\n    const [description, setDescription] = useState(event ? event.description : '')\n    const [errors, setErrors] = useState([]);\n    \n    const handleUpdate = () => {\n        let event = {\n            id: eventId,\n            title,\n            organizerName,\n            eventType,\n            eventCategory,\n            venueName,\n            address,\n            timestampStart,\n            timestampEnd,\n            capacity,\n            price,\n            description\n        }\n        setErrors([])\n        return dispatch(eventActions.updateEvent(event))\n            // .catch(async (res) => {\n            //     let data;\n            //     try {\n            //         data = await res.clone().json();\n            //     } catch {\n            //         data = await res.text();\n            //     }\n            //     if (data?.errors) setErrors(data.errors);\n            //     else if (data) setErrors([data]);\n            //     else setErrors([res.statusText]);\n            // })\n            .then(() =>{history.push(`/organizer/events`)});\n    };\n\n    if (!doneLoading) {\n        return <></>\n    } else {\n        if (event) {\n            return (\n                <>\n                    <NavBarLoggedIn />\n                    <br /><br />\n\n                    <span id='back-to-organized-events'>\n                        <Link to='/organizer/events'>Events</Link>\n                    </span>\n                    <br /><br/><br/>\n                    <section id='basic-info'>\n                        <form><h1 className='h1-default'>Edit Event</h1><br/>\n                            <label>Title\n                                <input type='text' name='title' onChange={e => setTitle(e.target.value)} value={title} />\n                            </label><br/>\n                            <label>Organizer Name\n                                <input type='text' name='organizer-name' onChange={e => setOrganizerName(e.target.value)} value={organizerName}/>\n                            </label><br/>\n                            <label>Type\n                                <input type='text' name='type' onChange={e => setEventType(e.target.value)} value={eventType}/>\n                            </label><br/>\n                            <label>Category\n                                <input type='text' name='category' onChange={e => setEventCategory(e.target.value)} value={eventCategory}/>\n                            </label><br/>\n                            <label>Venue\n                                <input type='text' name='venue-name' onChange={e => setVenueName(e.target.value)} value={venueName}/>\n                            </label><br/>\n                            <label>Address\n                                <input type='text' name='address' onChange={e => setAddress(e.target.value)} value={address}/>\n                            </label><br/>\n                            <label>Start Date/Time\n                                <input type='text' name='timestamp_start' onChange={e => setTimestampStart(e.target.value)} value={timestampStart}/>\n                            </label><br/>\n                            <label>End Date/Time\n                                <input type='text' name='timestamp-end' onChange={e => setTimestampEnd(e.target.value)} value={timestampEnd}/>\n                            </label><br/>\n                            <label>Capacity\n                                <input type='text' name='capacity' onChange={e => setCapacity(e.target.value)} value={capacity}/>\n                            </label> <br/>\n                            <label>Price\n                                <input type='text' name='price' onChange={e => setPrice(e.target.value)} value={`${price}`}/>\n                            </label> <br/>\n                            <label>Description\n                                <input type='text' name='description' onChange={e => setDescription(e.target.value)} value={description}/>\n                            </label>\n                        </form>\n                        <button onClick={handleUpdate}>Save</button>\n                        {/*<div>\n                            <div>\n                            <svg id=\"title-edit-svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"title-edit_svg__eds-icon--title-edit_base\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 2v3h1V3h5v10H6v1h5v-1H9V3h5v2h1V2H2z\"></path><g id=\"title-edit_svg__eds-icon--title-edit_lines\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"><path d=\"M15 9h7v1h-7zM15 13h7v1h-7zM6 17h16v1H6zM6 21h16v1H6z\"></path></g></svg>\n                            </div>\n                            <span id='basic-info-title'>Basic Info</span>\n                            <div id='basic-info-description'>\n                                Name your event and tell event-goers why they should come. Add details that highlight what makes it unique.\n                            </div>\n                        </div>\n\n                        <form>\n                            <div className='create-event-title-box'>\n                                <div className='create-event-placeholder-title'>\n                                    Event Title <span className='required-red'>*</span>\n                                </div>\n\n                                <br />\n\n                                <span>\n                                    <label>\n                                        <input className='create-event-title-input'\n                                                type='text' \n                                                name='title'\n                                                onChange={e => setTitle(e.target.value)}\n                                                onFocus={e => setClosestDivsActive(e)}\n                                                onBlur={e => setClosestDivsInactive(e)}\n                                        />\n                                    </label>\n                                </span>\n                            </div>\n                        </form> */}\n                    </section>\n                    \n                </>\n            )\n        } else return <NotFoundErrorPage />\n\n    }\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/AllEvents.js",["142"],[],"import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom/\";\nimport * as eventActions from '../../store/eventsReducer'\nimport NavBarLoggedIn from \"../NavBar/NavBarLoggedIn\";\nimport './AllEvents.css'\n\nexport default function AllEvents () {\n    \n    const dispatch = useDispatch();\n    \n    useEffect(() =>{\n        let getData = setTimeout(() => {\n            dispatch(eventActions.fetchEvents());\n          }, 0)\n        return () => clearTimeout(getData)\n    }, [])\n\n    const allEvents = useSelector(eventActions.getEvents)\n    return (\n        <>\n            <NavBarLoggedIn></NavBarLoggedIn>\n            <br/><br/>\n            <ul className='events-index'>\n            {allEvents.map(event => {\n                return (<>\n                    <Link to={`events/${event.id}`}><b>{event.title}:</b></Link>\n                    <li>Organizer: {event.organizerName}</li>\n                    <li>Location: {event.venueName}</li>\n                    <li>Date/Time: {event.timestampStart} - {event.timestampEnd}</li>\n                    <li>Type: {event.eventType}</li>\n                    <li>Category: {event.eventCategory}</li>\n                    <li>{event.capacity - event.ticketsSold} tickets remaining</li>\n                    <li>Price: {event.price}</li>\n                    <li>Description: {event.description}</li>\n                </>)\n            })}\n            </ul>\n        </>\n    )\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/SplashPage.js",["143"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/ShowEvent.js",["144","145","146"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/SignInForm.js",["147","148","149"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/CreateEvent.js",["150","151","152","153"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/SearchEvents.js",["154","155","156","157"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/errorPages/NotFoundErrorPage.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/NavBar/NavBarLoggedIn.js",["158"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/NavBar/NavBarLoggedOut.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/ordersReducer.js",["159","160"],[],"import csrfFetch from \"./csrf\";\n\nconst RECEIVE_ORDER = 'receiveOrders';\nconst RECEIVE_USER_ORDERS = 'receiveUserOrders';\nconst RECEIVE_USER_EVENTS = 'receiveUserEvents'\nconst REMOVE_ORDER = 'removeOrders';\n\nexport const getOrder = (orderId) => state => {\n    return state.orders ? state.orders[orderId] : null\n}\n\nexport const getOrders = state => {\n    return state && state.orders ? Object.values(state.orders) : []\n}\n\nexport const fetchOrder = orderId => async dispatch =>{\n    const response = await fetch(`/api/orders/${orderId}`)\n    const data = await response.json();\n\n    if (response.ok) {\n        dispatch({\n            type: RECEIVE_ORDER,\n            order: data.order\n        })\n    }\n    return [data.order, true]\n}\n\nexport const createOrder = (order) => async dispatch => {\n    const response = await csrfFetch(`/api/orders`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(order)\n    })\n    const data = response.json()\n\n    dispatch({\n        type: REMOVE_ORDER,\n        order: data.order\n    })\n}\n\nexport const deleteOrder = (orderId) => async dispatch => {\n    const response = await csrfFetch(`/api/orders/${orderId}`, {\n        method: 'DELETE',\n        headers: {'Content-Type': 'application/json'},\n    })\n\n    dispatch({\n        type: REMOVE_ORDER,\n        orderId: orderId\n    })\n}\n\nconst ordersReducer = (oldState = {}, action) => {\n    let newState = {...oldState}\n    switch (action.type) {\n        // case RECEIVE_ORDERS:    \n        //     newState = {...oldState,...action.orders}\n        //     return newState\n        case RECEIVE_ORDER:\n            newState[action.order.id] = action.order\n            return newState\n        case RECEIVE_USER_EVENTS:\n            newState = {...oldState,...action.orders}\n            return newState\n        case REMOVE_ORDER:\n            delete newState[action.orderId]\n            return newState\n        default:\n            return oldState\n    }\n}\n\nexport default ordersReducer","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/orders/OrderIndex.js",["161"],[],"import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from \"react\";\nimport NavBarLoggedIn from '../NavBar/NavBarLoggedIn';\nimport * as sessionActions from '../../store/sessionReducer';\nimport * as userActions from '../../store/usersReducer';\nimport * as eventActions from '../../store/eventsReducer';\nimport * as orderActions from '../../store/ordersReducer';\nimport './OrderIndex.css'\n\nexport default function OrderIndex () {\n    const dispatch = useDispatch();\n    const currentUserId = useSelector(sessionActions.getCurrentUser).id\n    const currentUser = useSelector(userActions.getUser(currentUserId))\n    const orders = useSelector(orderActions.getOrders).sort((a,b) => b.id - a.id)\n    const events = useSelector(eventActions.getEvents)\n\n    useEffect(() =>{\n        let getData = setTimeout(() => {\n            dispatch(userActions.fetchUserEvents(currentUserId));\n          }, 0)\n        return () => clearTimeout(getData)\n    }, [])\n\n    const pluralizeOrders = () =>{\n        if (currentUser && currentUser.orders.length === 1) {\n            return 'order'\n        } else return 'orders'\n    }\n\n    if (currentUser) {return (\n        <>\n            <NavBarLoggedIn />\n            <main className='order-index-main'>\n                <div className='show-user-name-tile'>\n                    <p>Pic placeholder</p>\n                    <h1 className='show-user-name-tile-name'>{`${currentUser?.firstName} ${currentUser.lastName}`}</h1>\n                    <p>{currentUser?.orders.length} {pluralizeOrders()}</p>\n                </div>\n                <div className='order-index-orders'>\n                    <h2>Orders</h2>\n                    {orders.map(order =>{\n                        const event = events.filter(event => event.id === order.eventId)[0]\n                        return(\n                            <>\n                                <p>order #{order.id}</p>\n                                <p>ordered on {order.createdAt}</p>\n                                <p>{event.title}</p>\n                                <p>{event.date}</p>\n                                <p>{`$${event.price * order.numTickets}` || 'Free order'}</p>\n                            </>\n                        )\n                    })}\n                </div>\n            </main>\n        </>\n    )}\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/orders/OrderShow.js",["162","163"],[],"import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from \"react\";\nimport { useHistory, useParams, Link } from 'react-router-dom';\nimport NavBarLoggedIn from '../NavBar/NavBarLoggedIn';\nimport * as sessionActions from '../../store/sessionReducer';\nimport * as userActions from '../../store/usersReducer';\nimport * as eventActions from '../../store/eventsReducer';\nimport * as orderActions from '../../store/ordersReducer';\nimport './OrderShow.css'\n\nexport default function OrderShow () {\n    const dispatch = useDispatch();\n    const {orderId} = useParams();\n    const currentUserId = useSelector(sessionActions.getCurrentUser).id\n    const currentUser = useSelector(userActions.getUser(currentUserId))\n    const order = useSelector(orderActions.getOrder(orderId))\n    const event = useSelector(eventActions.getEvent(order?.eventId))\n    useEffect(() =>{\n        let getData = setTimeout(() => {\n            dispatch(userActions.fetchUserEvents(currentUserId));\n          }, 0)\n        return () => clearTimeout(getData)\n    }, [])\n\n    return(\n    <>\n        <NavBarLoggedIn /><br/><br/>\n        <div className='order-show-go-back'>\n            <Link to={`/users/${currentUserId}`}>Back to Current Orders</Link>\n        </div>\n        <div className='order-show-title-box'>\n            <h1 className='order-show-title'>Order for <Link to={`/events/${event?.id}`}>{event?.title}</Link></h1>\n            <p className='order-show-info'>\n                {event?.price ? `$${order.numTickets * event.price}` : `Free`} order #{order?.id} on {order?.createdAt}<br/>\n                <b>Event Information:</b>: from {event?.timestampStart} to {event?.timestampEnd}<br/>\n                {event?.address}\n            </p>\n        </div>\n        <div className='order-show-lower-box'>\n            <button>Cancel Order</button>\n            <div className='order-show-ticket-info'>\n                <h2 className='order-show-ticket-count'>({order?.numTickets}x) General Admission</h2><br/>\n                <h3>Contact Information</h3><br/>\n                <h4>First Name</h4><br/>\n                {currentUser?.firstName}<br/>\n                <h4>Last Name</h4><br/>\n                {currentUser?.lastName}<br/>\n                <h4>Email</h4><br/>\n                {currentUser?.email}\n            </div>\n        </div>\n        <div className='order-show-go-back'>\n            <Link to={`/users/${currentUserId}`}>Back to Current Orders</Link>\n        </div>\n    </>\n    )\n}",{"ruleId":"164","severity":1,"message":"165","line":6,"column":10,"nodeType":"166","messageId":"167","endLine":6,"endColumn":24},{"ruleId":"164","severity":1,"message":"168","line":7,"column":25,"nodeType":"166","messageId":"167","endLine":7,"endColumn":36},{"ruleId":"164","severity":1,"message":"169","line":13,"column":10,"nodeType":"166","messageId":"167","endLine":13,"endColumn":20},{"ruleId":"164","severity":1,"message":"170","line":13,"column":22,"nodeType":"166","messageId":"167","endLine":13,"endColumn":31},{"ruleId":"164","severity":1,"message":"171","line":13,"column":33,"nodeType":"166","messageId":"167","endLine":13,"endColumn":43},{"ruleId":"164","severity":1,"message":"172","line":15,"column":13,"nodeType":"166","messageId":"167","endLine":15,"endColumn":27},{"ruleId":"164","severity":1,"message":"173","line":24,"column":16,"nodeType":"166","messageId":"167","endLine":24,"endColumn":27},{"ruleId":"164","severity":1,"message":"174","line":71,"column":11,"nodeType":"166","messageId":"167","endLine":71,"endColumn":19},{"ruleId":"164","severity":1,"message":"175","line":6,"column":7,"nodeType":"166","messageId":"167","endLine":6,"endColumn":26},{"ruleId":"164","severity":1,"message":"176","line":28,"column":17,"nodeType":"166","messageId":"167","endLine":28,"endColumn":31},{"ruleId":"177","severity":1,"message":"178","line":90,"column":33,"nodeType":"179","endLine":90,"endColumn":173},{"ruleId":"180","severity":1,"message":"181","line":14,"column":31,"nodeType":"182","messageId":"183","endLine":14,"endColumn":60,"fix":"184"},{"ruleId":"185","severity":1,"message":"186","line":22,"column":8,"nodeType":"187","endLine":22,"endColumn":10,"suggestions":"188"},{"ruleId":"164","severity":1,"message":"189","line":13,"column":9,"nodeType":"166","messageId":"167","endLine":13,"endColumn":21},{"ruleId":"185","severity":1,"message":"190","line":27,"column":8,"nodeType":"187","endLine":27,"endColumn":10,"suggestions":"191"},{"ruleId":"164","severity":1,"message":"192","line":54,"column":12,"nodeType":"166","messageId":"167","endLine":54,"endColumn":18},{"ruleId":"185","severity":1,"message":"193","line":17,"column":8,"nodeType":"187","endLine":17,"endColumn":10,"suggestions":"194"},{"ruleId":"185","severity":1,"message":"186","line":24,"column":8,"nodeType":"187","endLine":24,"endColumn":10,"suggestions":"195"},{"ruleId":"164","severity":1,"message":"196","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"197","line":32,"column":8,"nodeType":"187","endLine":32,"endColumn":10,"suggestions":"198"},{"ruleId":"185","severity":1,"message":"199","line":67,"column":8,"nodeType":"187","endLine":67,"endColumn":20,"suggestions":"200"},{"ruleId":"164","severity":1,"message":"201","line":1,"column":20,"nodeType":"166","messageId":"167","endLine":1,"endColumn":29},{"ruleId":"164","severity":1,"message":"176","line":28,"column":17,"nodeType":"166","messageId":"167","endLine":28,"endColumn":31},{"ruleId":"177","severity":1,"message":"178","line":87,"column":33,"nodeType":"179","endLine":87,"endColumn":173},{"ruleId":"164","severity":1,"message":"201","line":1,"column":27,"nodeType":"166","messageId":"167","endLine":1,"endColumn":36},{"ruleId":"164","severity":1,"message":"202","line":23,"column":12,"nodeType":"166","messageId":"167","endLine":23,"endColumn":26},{"ruleId":"164","severity":1,"message":"203","line":23,"column":28,"nodeType":"166","messageId":"167","endLine":23,"endColumn":45},{"ruleId":"164","severity":1,"message":"192","line":29,"column":12,"nodeType":"166","messageId":"167","endLine":29,"endColumn":18},{"ruleId":"164","severity":1,"message":"196","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":14},{"ruleId":"164","severity":1,"message":"204","line":14,"column":11,"nodeType":"166","messageId":"167","endLine":14,"endColumn":22},{"ruleId":"164","severity":1,"message":"205","line":15,"column":11,"nodeType":"166","messageId":"167","endLine":15,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":23,"column":8,"nodeType":"187","endLine":23,"endColumn":10,"suggestions":"206"},{"ruleId":"164","severity":1,"message":"207","line":4,"column":13,"nodeType":"166","messageId":"167","endLine":4,"endColumn":25},{"ruleId":"164","severity":1,"message":"175","line":4,"column":7,"nodeType":"166","messageId":"167","endLine":4,"endColumn":26},{"ruleId":"164","severity":1,"message":"174","line":44,"column":11,"nodeType":"166","messageId":"167","endLine":44,"endColumn":19},{"ruleId":"185","severity":1,"message":"186","line":22,"column":8,"nodeType":"187","endLine":22,"endColumn":10,"suggestions":"208"},{"ruleId":"164","severity":1,"message":"209","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":23,"column":8,"nodeType":"187","endLine":23,"endColumn":10,"suggestions":"210"},"no-unused-vars","'restoreSession' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'createUser' is defined but never used.","'loginUser' is defined but never used.","'logoutUser' is defined but never used.","'sessionActions' is defined but never used.","'restoreCSRF' is defined but never used.","'response' is assigned a value but never used.","'RECEIVE_USER_ORDERS' is assigned a value but never used.","'textFieldTitle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-whitespace-before-property","Unexpected whitespace before property organizedEvents.","MemberExpression","unexpectedWhitespace",{"range":"211","text":"212"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUserId' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["213"],"'current_user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'eventId'. Either include them or remove the dependency array.",["214"],"'errors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["215"],["216"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUserId', 'dispatch', and 'eventId'. Either include them or remove the dependency array.",["217"],"React Hook useEffect has a missing dependency: 'handlePlusMinusClick'. Either include it or remove the dependency array.",["218"],"'useEffect' is defined but never used.","'eventStartDate' is assigned a value but never used.","'setEventStartDate' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'allEvents' is assigned a value but never used.",["219"],"'eventActions' is defined but never used.",["220"],"'useHistory' is defined but never used.",["221"],[669,672],"?.",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"222","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"222","fix":"233"},{"desc":"222","fix":"234"},{"desc":"222","fix":"235"},"Update the dependencies array to be: [currentUserId, dispatch]",{"range":"236","text":"237"},"Update the dependencies array to be: [dispatch, eventId]",{"range":"238","text":"239"},"Update the dependencies array to be: [dispatch]",{"range":"240","text":"241"},{"range":"242","text":"237"},"Update the dependencies array to be: [currentUserId, dispatch, eventId]",{"range":"243","text":"244"},"Update the dependencies array to be: [handlePlusMinusClick, numTickets]",{"range":"245","text":"246"},{"range":"247","text":"237"},{"range":"248","text":"237"},{"range":"249","text":"237"},[1076,1078],"[currentUserId, dispatch]",[998,1000],"[dispatch, eventId]",[535,537],"[dispatch]",[995,997],[1405,1407],"[currentUserId, dispatch, eventId]",[2496,2508],"[handlePlusMinusClick, numTickets]",[885,887],[962,964],[1052,1054]]