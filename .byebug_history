c
@event
n
@event
event2
c
@event2
exit
event_params
@event
exit
params
@event
exit
params[:price]
@event.price
c
params[:price]
params[:address]
params
@event.organizer_id == current_user.id
c
n
current_user.id
@event.organizer_id
@event.valid?
@event
c
@event.valid?
c
@event.errors.full_messages
@event
n
@event
n
@event.valid?
@event
@event.organizer_id=1
n
@event
n
c
@event.valid?
@event
c
@event
params
@event
@event.errors.full_messages
n
@event.valid?
@event
n
@event.valid?
@event
n
c
params[:event_type]
@event
@event.organizer_name=params[:organizer_name]
params
@event
n
params
c
@event
c
@event.errors.full_messages
@event
c
@event.valid?
@event
c
s
c
n
attributes
subclass
n
params
s
@event
params
c
@event
c
n
c
json.extract! @user, :id, :email, :first_name, :last_name, :created_at
c
event
obj
c
event.id
event
c
events
c
Event.find(1)
c
json.user do
    json.extract! @user, :id, :email, :first_name, :last_name, :created_at, :profile_photo
end
c
user = User.find(1)
json.user {json.extract! @user, :id}
json.extract! @user, :id
json.@user
json.user
json.user {json.extract! @user, :id}
json.user do
    json.extract! @user, :id, :email, :first_name, :last_name, :created_at
end
c
res
c
n
current_user
response
response.status
result
n
response
payload[:status]
n
payload
n
current_user
n
current_user
n
@user.valid?
@user
n
password
email
@user
c
errors
s
@user
c
error
c
error
c
error
c
error
c
error
c
request.accepts.first.html?
error
c
n
@user
c
n
@user
c
current_user
c
session['_eventbite_session']
current_user
c
current_user
session['_eventbite_session']
c
exit
session[:session_token]
session[:session_token'
session['_eventbite_session']
current_user
c
user.session_token
session['_eventbite_session']
c
n
session['_eventbite_session']
c
session[:session_token]
payload
current_user
n
current_user
n
current_user
n
current_user
current_user?
n
current_user
logged_in?
@user
n
user.session_token
session[:session_token]
n
self
c
self.save!
self.session_token
n
session[:session_token]
n
@user
c
n
s
n
s
current_user
c
n
session[:session_token]
n
user.session_token
session[:session_token]
c
session[:session_token]
self.session_token
self
n
user.session_token
session[:session_token]
c
n
self.session_token
session[:session_token]
self
n
self
c
@user
c
current_user
c
current_user
c
current_user
session[:session_token] = user.session_token
user.session_token
user = User.find_by(email: 'joe@hi.com')
current_user
c
session[:session_token]
current_user
c
n
session[:session_token]
n
s
@user
params
c
