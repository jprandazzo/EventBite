{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport usersReducer from './usersReducer';\nimport sessionReducer from './sessionReducer';\n// import eventsReducer from './events';\n\nconst rootReducer = combineReducers({\n  users: usersReducer,\n  session: sessionReducer /*,\n                          events: eventsReducer*/\n});\n\nlet enhancer;\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\nexport default function configureStore(preloadedState = {}) {\n  return createStore(rootReducer, preloadedState, enhancer);\n}","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","thunk","usersReducer","sessionReducer","rootReducer","users","session","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"sources":["/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport usersReducer from './usersReducer';\nimport sessionReducer from './sessionReducer';\n// import eventsReducer from './events';\n\nconst rootReducer = combineReducers({\n  users: usersReducer,\n  session: sessionReducer/*,\n  events: eventsReducer*/\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\n\n\nexport default function configureStore (preloadedState = {}) {\n    return createStore(rootReducer, preloadedState, enhancer)\n}"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC9E,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C;;AAEA,MAAMC,WAAW,GAAGN,eAAe,CAAC;EAClCO,KAAK,EAAEH,YAAY;EACnBI,OAAO,EAAEH,cAAc;AACzB;AACA,CAAC,CAAC;;AAEF,IAAII,QAAQ;AAEZ,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCH,QAAQ,GAAGR,eAAe,CAACE,KAAK,CAAC;AACnC,CAAC,MAAM;EACL,MAAMU,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC,CAACC,OAAO;EAC9C,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAoC,IAAIhB,OAAO;EACxDO,QAAQ,GAAGO,gBAAgB,CAACf,eAAe,CAACE,KAAK,EAAEU,MAAM,CAAC,CAAC;AAC7D;AAIA,eAAe,SAASM,cAAcA,CAAEC,cAAc,GAAG,CAAC,CAAC,EAAE;EACzD,OAAOrB,WAAW,CAACO,WAAW,EAAEc,cAAc,EAAEX,QAAQ,CAAC;AAC7D"},"metadata":{},"sourceType":"module","externalDependencies":[]}