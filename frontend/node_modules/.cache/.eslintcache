[{"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/index.js":"1","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/App.js":"2","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/sessionReducer.js":"3","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/reportWebVitals.js":"4","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/eventsReducer.js":"5","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/usersReducer.js":"6","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/index.js":"7","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/csrf.js":"8","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/SignUpForm.js":"9","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/OrganizerEventIndex.js":"10","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/EditEvent.js":"11","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/AllEvents.js":"12","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/SplashPage.js":"13","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/ShowEvent.js":"14","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/SignInForm.js":"15","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/CreateEvent.js":"16","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/SearchEvents.js":"17","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/errorPages/NotFoundErrorPage.js":"18","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/NavBar/NavBarLoggedIn.js":"19","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/NavBar/NavBarLoggedOut.js":"20","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/ordersReducer.js":"21","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/orders/OrderIndex.js":"22","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/orders/OrderShow.js":"23"},{"size":1577,"mtime":1690815115304,"results":"24","hashOfConfig":"25"},{"size":1904,"mtime":1690743905448,"results":"26","hashOfConfig":"25"},{"size":2680,"mtime":1690835789508,"results":"27","hashOfConfig":"25"},{"size":362,"mtime":1689882403602,"results":"28","hashOfConfig":"25"},{"size":2674,"mtime":1690831636698,"results":"29","hashOfConfig":"25"},{"size":2014,"mtime":1690835792147,"results":"30","hashOfConfig":"25"},{"size":873,"mtime":1690683800147,"results":"31","hashOfConfig":"25"},{"size":568,"mtime":1690693397997,"results":"32","hashOfConfig":"25"},{"size":6724,"mtime":1690590156941,"results":"33","hashOfConfig":"25"},{"size":1864,"mtime":1690810901667,"results":"34","hashOfConfig":"25"},{"size":8592,"mtime":1690671153566,"results":"35","hashOfConfig":"25"},{"size":1468,"mtime":1690668196183,"results":"36","hashOfConfig":"25"},{"size":1733,"mtime":1690811972075,"results":"37","hashOfConfig":"25"},{"size":4954,"mtime":1690812083136,"results":"38","hashOfConfig":"25"},{"size":6699,"mtime":1690839923691,"results":"39","hashOfConfig":"25"},{"size":19196,"mtime":1690903144678,"results":"40","hashOfConfig":"25"},{"size":1321,"mtime":1690810855940,"results":"41","hashOfConfig":"25"},{"size":299,"mtime":1690576131976,"results":"42","hashOfConfig":"25"},{"size":7648,"mtime":1690900172507,"results":"43","hashOfConfig":"25"},{"size":5763,"mtime":1690901855919,"results":"44","hashOfConfig":"25"},{"size":2011,"mtime":1690700039135,"results":"45","hashOfConfig":"25"},{"size":2321,"mtime":1690705125793,"results":"46","hashOfConfig":"25"},{"size":2483,"mtime":1690707254306,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"rxi2wg",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/index.js",["125","126","127","128","129"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/App.js",["130"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/sessionReducer.js",["131"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/reportWebVitals.js",[],[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/eventsReducer.js",["132"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/usersReducer.js",["133"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/index.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/csrf.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/SignUpForm.js",["134","135"],[],"import React, { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { useHistory, Link } from 'react-router-dom';\nimport * as sessionActions from \"../../store/sessionReducer\"\nimport './Authentication.css';\n\nexport default function SignUpForm () {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // need to set a sessionUser such that if present, redirect and do \n    // not allow user to sign up\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [errors, setErrors] = useState([]);\n\n    const focusInput = (e) => {\n        //blur anything that's currently focused\n        Array.from(document.querySelectorAll('.input-field-input'))\n            .forEach(el => {\n                el.blur()\n            })\n        \n        //whichever div is clicked, find its input and focus it\n        if (e.target.className === 'auth-input-box') {\n\n            let textFieldTitle = Array.from(e.target.childNodes).filter(el => el.className === 'signup-signin-field-title')[0]\n            let input = e.target.childNodes[2].childNodes[0].childNodes[0]\n            input.focus()\n        } else if (e.target.className === 'signup-signin-field-title') {\n            \n            let outerDiv = e.target.parentNode\n            let input = outerDiv.childNodes[2].childNodes[0].childNodes[0]\n            input.focus()\n\n        } else if (e.target.className === 'signup-signin-field-input') {\n            e.target.focus()\n        }\n    }\n\n    function setClosestDivsActive(e){\n\n        //add 'focus' class to both surrounding divs of the input\n        //that was focused\n        let outerDiv = e.target.closest('div')\n        outerDiv.classList.add('active-div')\n\n        let textFieldTitle = Array.from(outerDiv.childNodes).filter(el => el.className === 'signup-signin-field-title')[0]\n        textFieldTitle.classList.add('active-input')\n    }\n\n    function setClosestDivsInactive(e) {\n        //remove 'focus' class from both surrounding divs of the input\n        //that was blurred\n        let outerDiv = e.target.closest('div')\n        outerDiv.classList.remove('active-div')\n        let textFieldTitle = Array.from(outerDiv.childNodes).filter(el => el.classList.contains('signup-signin-field-title'))[0]\n        textFieldTitle.classList.remove('active-input')\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        let firstName = 'joe';\n        let lastName = 'ra';\n\n        return dispatch(sessionActions.signup({email, password, firstName, lastName}))\n            .catch(async (res) => {\n                let data;\n                try {\n                // .clone() essentially allows you to read the response body twice\n                data = await res.clone().json();\n                } catch {\n                data = await res.text(); // Will hit this case if, e.g., server is down\n                }\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n            })\n            .then(() =>{history.push('/')});\n    }\n    return(\n        <>\n            <main onClick={e => focusInput(e)}>\n            <section className='split split-left' id='signin'>\n                    <div className='centered'>\n                        <div id='eblogo-auth'>\n                            <Link to='/'>\n                                <img src='https://cdn.evbstatic.com/s3-build/prod/1322331-rc2023-07-24_16.04-5e36c7c/django/images/logos/eb_orange_on_white_1200x630.png' />\n                            </Link>\n                        </div>\n                        <h1 id='signup-signin-h1'>Create an account</h1>\n\n                        <form>\n                            <div className='auth-input-box'>\n                                <div className='signup-signin-field-title'>\n                                    Email address\n                                </div>\n\n                                <br />\n\n                                <span >\n                                    <label>\n                                        <input className='signup-signin-field-input'\n                                               type='text' \n                                               name='email'\n                                               onChange={e => setEmail(e.target.value)}\n                                               onFocus={e => setClosestDivsActive(e)}\n                                               onBlur={e => setClosestDivsInactive(e)}\n                                        />\n                                    </label>\n                                </span>\n                            </div>\n\n                            <br />\n\n                            <div className='auth-input-box'>\n                                <div className='signup-signin-field-title'>\n                                    Password\n                                </div>\n\n                                <br />\n\n                                <span >\n                                    <label>\n                                        <input className='signup-signin-field-input'\n                                               type='password' \n                                               name='password'\n                                               onChange={e => setPassword(e.target.value)}\n                                               onFocus={e => setClosestDivsActive(e)}\n                                               onBlur={e => setClosestDivsInactive(e)}\n                                        />\n                                    </label>\n                                </span>\n                            </div>\n\n                            <br />\n\n                            <ul>\n                                {errors.map(error => <li key={error}>{error}</li>)}\n                            </ul>\n\n                            <br />\n\n                            <button className='auth-button' onClick={handleSubmit}>\n                                Sign up\n                            </button>\n                        </form>\n                        <div className='signup-signin-switch'>\n                            <Link to='/signin'>Log in</Link>\n                        </div>\n                    </div>\n                </section>\n                <section className='split split-right' id='auth-side-photo'>\n                    <div className='centered login-image'>\n                        {/* <img src='https://i.ibb.co/Qp4jyky/Screenshot-2023-07-26-at-1-38-15-PM.png' /> */}\n                    </div>\n                </section>\n            </main>\n        </>\n    )\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/OrganizerEventIndex.js",["136","137"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/EditEvent.js",["138","139","140"],[],"import React, { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport * as eventActions from \"../../store/eventsReducer\"\nimport * as sessionActions from '../../store/sessionReducer'\nimport NavBarLoggedIn from \"../NavBar/NavBarLoggedIn\";\nimport NotFoundErrorPage from \"../errorPages/NotFoundErrorPage\";\nimport './EditEvent.css'\n\nexport default function EditEvent () {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    let current_user = useSelector(sessionActions.getCurrentUser)\n    \n    const {eventId} = useParams();\n\n    const [doneLoading, setDoneLoading] = useState(false);\n    const [event, setEvent] = useState(undefined)\n\n    useEffect(() =>{\n        const awaitFetch = async () => {\n            const res = await dispatch(eventActions.fetchEvent(eventId))\n            setEvent(res[0])\n            setDoneLoading(res[1])\n        }\n        awaitFetch()\n    }, [])\n    \n    useEffect(() =>{\n        setTitle(event ? event.title : '')\n        setOrganizerName(event ? event.organizerName : '')\n        setEventType(event ? event.eventType : '')\n        setEventCategory(event ? event.eventCategory : '')\n        setVenueName(event ? event.venueName : '')\n        setAddress(event ? event.address : '')\n        setTimestampStart(event ? event.timestampStart : '')\n        setTimestampEnd(event ? event.timestampEnd : '')\n        setCapacity(event ? event.capacity : '')\n        setPrice(event ? event.price : '')\n        setDescription(event ? event.description : '')\n    },[event])\n\n    const [title, setTitle] = useState(event ? event.title : '')\n    const [organizerName, setOrganizerName] = useState(event ? event.organizerName : '')\n    const [eventType, setEventType] = useState(event ? event.eventType : '')\n    const [eventCategory, setEventCategory] = useState(event ? event.eventCategory : '')\n    const [venueName, setVenueName] = useState(event ? event.venueName : '')\n    const [address, setAddress] = useState(event ? event.address : '')\n    const [timestampStart, setTimestampStart] = useState(event ? event.timestampStart : '')\n    const [timestampEnd, setTimestampEnd] = useState(event ? event.timestampEnd : '')\n    const [capacity, setCapacity] = useState(event ? event.capacity : 0)\n    const [price, setPrice] = useState(event ? event.price : 0);\n    const [description, setDescription] = useState(event ? event.description : '')\n    const [errors, setErrors] = useState([]);\n    \n    const handleUpdate = () => {\n        let event = {\n            id: eventId,\n            title,\n            organizerName,\n            eventType,\n            eventCategory,\n            venueName,\n            address,\n            timestampStart,\n            timestampEnd,\n            capacity,\n            price,\n            description\n        }\n        setErrors([])\n        return dispatch(eventActions.updateEvent(event))\n            // .catch(async (res) => {\n            //     let data;\n            //     try {\n            //         data = await res.clone().json();\n            //     } catch {\n            //         data = await res.text();\n            //     }\n            //     if (data?.errors) setErrors(data.errors);\n            //     else if (data) setErrors([data]);\n            //     else setErrors([res.statusText]);\n            // })\n            .then(() =>{history.push(`/organizer/events`)});\n    };\n\n    if (!doneLoading) {\n        return <></>\n    } else {\n        if (event) {\n            return (\n                <>\n                    <NavBarLoggedIn />\n                    <br /><br />\n\n                    <span id='back-to-organized-events'>\n                        <Link to='/organizer/events'>Events</Link>\n                    </span>\n                    <br /><br/><br/>\n                    <section id='basic-info'>\n                        <form><h1 className='h1-default'>Edit Event</h1><br/>\n                            <label>Title\n                                <input type='text' name='title' onChange={e => setTitle(e.target.value)} value={title} />\n                            </label><br/>\n                            <label>Organizer Name\n                                <input type='text' name='organizer-name' onChange={e => setOrganizerName(e.target.value)} value={organizerName}/>\n                            </label><br/>\n                            <label>Type\n                                <input type='text' name='type' onChange={e => setEventType(e.target.value)} value={eventType}/>\n                            </label><br/>\n                            <label>Category\n                                <input type='text' name='category' onChange={e => setEventCategory(e.target.value)} value={eventCategory}/>\n                            </label><br/>\n                            <label>Venue\n                                <input type='text' name='venue-name' onChange={e => setVenueName(e.target.value)} value={venueName}/>\n                            </label><br/>\n                            <label>Address\n                                <input type='text' name='address' onChange={e => setAddress(e.target.value)} value={address}/>\n                            </label><br/>\n                            <label>Start Date/Time\n                                <input type='text' name='timestamp_start' onChange={e => setTimestampStart(e.target.value)} value={timestampStart}/>\n                            </label><br/>\n                            <label>End Date/Time\n                                <input type='text' name='timestamp-end' onChange={e => setTimestampEnd(e.target.value)} value={timestampEnd}/>\n                            </label><br/>\n                            <label>Capacity\n                                <input type='text' name='capacity' onChange={e => setCapacity(e.target.value)} value={capacity}/>\n                            </label> <br/>\n                            <label>Price\n                                <input type='text' name='price' onChange={e => setPrice(e.target.value)} value={`${price}`}/>\n                            </label> <br/>\n                            <label>Description\n                                <input type='text' name='description' onChange={e => setDescription(e.target.value)} value={description}/>\n                            </label>\n                        </form>\n                        <button onClick={handleUpdate}>Save</button>\n                        {/*<div>\n                            <div>\n                            <svg id=\"title-edit-svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"title-edit_svg__eds-icon--title-edit_base\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 2v3h1V3h5v10H6v1h5v-1H9V3h5v2h1V2H2z\"></path><g id=\"title-edit_svg__eds-icon--title-edit_lines\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"><path d=\"M15 9h7v1h-7zM15 13h7v1h-7zM6 17h16v1H6zM6 21h16v1H6z\"></path></g></svg>\n                            </div>\n                            <span id='basic-info-title'>Basic Info</span>\n                            <div id='basic-info-description'>\n                                Name your event and tell event-goers why they should come. Add details that highlight what makes it unique.\n                            </div>\n                        </div>\n\n                        <form>\n                            <div className='create-event-title-box'>\n                                <div className='create-event-placeholder-title'>\n                                    Event Title <span className='required-red'>*</span>\n                                </div>\n\n                                <br />\n\n                                <span>\n                                    <label>\n                                        <input className='create-event-title-input'\n                                                type='text' \n                                                name='title'\n                                                onChange={e => setTitle(e.target.value)}\n                                                onFocus={e => setClosestDivsActive(e)}\n                                                onBlur={e => setClosestDivsInactive(e)}\n                                        />\n                                    </label>\n                                </span>\n                            </div>\n                        </form> */}\n                    </section>\n                    \n                </>\n            )\n        } else return <NotFoundErrorPage />\n\n    }\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/AllEvents.js",["141"],[],"import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom/\";\nimport * as eventActions from '../../store/eventsReducer'\nimport NavBarLoggedIn from \"../NavBar/NavBarLoggedIn\";\nimport './AllEvents.css'\n\nexport default function AllEvents () {\n    \n    const dispatch = useDispatch();\n    \n    useEffect(() =>{\n        let getData = setTimeout(() => {\n            dispatch(eventActions.fetchEvents());\n          }, 0)\n        return () => clearTimeout(getData)\n    }, [])\n\n    const allEvents = useSelector(eventActions.getEvents)\n    return (\n        <>\n            <NavBarLoggedIn></NavBarLoggedIn>\n            <br/><br/>\n            <ul className='events-index'>\n            {allEvents.map(event => {\n                return (<>\n                    <Link to={`events/${event.id}`}><b>{event.title}:</b></Link>\n                    <li>Organizer: {event.organizerName}</li>\n                    <li>Location: {event.venueName}</li>\n                    <li>Date/Time: {event.timestampStart} - {event.timestampEnd}</li>\n                    <li>Type: {event.eventType}</li>\n                    <li>Category: {event.eventCategory}</li>\n                    <li>{event.capacity - event.ticketsSold} tickets remaining</li>\n                    <li>Price: {event.price}</li>\n                    <li>Description: {event.description}</li>\n                </>)\n            })}\n            </ul>\n        </>\n    )\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/SplashPage.js",["142"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/ShowEvent.js",["143","144","145"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/SignInForm.js",["146","147","148"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/CreateEvent.js",["149","150","151","152"],[],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Calendar from 'react-calendar';\nimport moment from 'moment-timezone';\nimport { useHistory, Link } from 'react-router-dom';\nimport * as eventActions from \"../../store/eventsReducer\";\nimport * as sessionActions from '../../store/sessionReducer';\nimport NavBarLoggedIn from \"../NavBar/NavBarLoggedIn\";\nimport './CreateEvent.css';\n\nexport default function CreateEvent () {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const currentUser = useSelector(sessionActions.getCurrentUser)\n\n    const [title, setTitle] = useState('')\n    const [organizerName, setOrganizerName] = useState('')\n    const [eventType, setEventType] = useState('')\n    const [eventCategory, setEventCategory] = useState('')\n    const [venueName, setVenueName] = useState('')\n    const [address, setAddress] = useState('')\n    const [eventStartDate, setEventStartDate] = useState(moment(moment().add(72, 'day').tz(\"America/New_York\")).format('MM/DD/YYYY'))\n    const [eventStartTime, setEventStartTime] = useState('12:00 PM')\n    const [eventEndDate, setEventEndDate] = useState(eventStartDate)\n    const [eventEndTime, setEventEndTime] = useState('3:00 PM')\n    const [capacity, setCapacity] = useState('')\n    const [errors, setErrors] = useState([]);\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [startCalActive, setStartCalActive] = useState(false);\n    const [endCalActive, setEndCalActive] = useState(false);\n    \n    const eventTypes = [\n        {value: null, display: 'Type'},\n        {value: 'attraction', display: 'Attraction'},\n        {value: 'camp_trip_retreat', display: 'Camp/Trip/Retreat'},\n        {value: 'concert_performance', display: 'Concert/Performance'},\n        {value: 'conference', display: \"Conference\"},\n        {value: 'convention', display: 'Convention'},\n        {value: 'dinner_gala', display: 'Dinner/Gala'},\n        {value: 'festival_fair', display: 'Festival/Fair'},\n        {value: 'party_social_gathering', display: 'Party/Social Gathering'},\n        {value: 'type_other', display: \"Other\"}\n    ]\n\n    const eventCategories = [\n        {value: null, display: 'Category'},\n        {value: 'community_culture', display: 'Community/Culture'},\n        {value: 'fashion_beauty', display: 'Fashion/Beauty'},\n        {value: 'film_media_entertainment', display: 'Film/Media/Entertainment'},\n        {value: 'food_drink', display: 'Food/Drink'},\n        {value: 'music', display: 'Music'},\n        {value: 'category_other', display: 'Other'},\n        {value: 'travel_outdoor', display: 'Travel/Outdoor'}\n    ]\n\n    const focusInput = (e) => {\n        //blur anything that's currently focused\n        Array.from(document.querySelectorAll('.create-event-input'))\n            .forEach(el => {\n                el.blur()\n            })\n        \n        //whichever div is clicked, find its input and focus it\n        if (e.target.className === 'create-event-title-box') {\n\n            let textFieldTitle = Array.from(e.target.childNodes)[0]\n            let input = e.target.childNodes[2].childNodes[0].childNodes[0]\n            input.focus()\n        } else if (e.target.className === 'create-event-field-text') {\n            \n            let outerDiv = e.target.parentNode\n            let input = outerDiv.childNodes[2].childNodes[0].childNodes[0]\n            input.focus()\n\n        } else if (e.target.className === 'create-event-input') {\n            e.target.focus()\n        }\n    }\n\n    function setClosestDivsActive(e){\n        //add 'focus' class to both surrounding divs of the input\n        //that was focused\n        let outerDiv = e.target.closest('div')\n        outerDiv.classList.add('active-div')\n\n        let textFieldTitle = Array.from(outerDiv.childNodes)[0]\n        textFieldTitle.classList.add('active-field')\n    }\n\n    function setClosestDivsInactive(e) {\n        //remove 'focus' class from both surrounding divs of the input\n        //that was blurred\n        let outerDiv = e.target.closest('div')\n        outerDiv.classList.remove('active-div')\n        let textFieldTitle = Array.from(outerDiv.childNodes)[0]\n        textFieldTitle.classList.remove('active-field')\n    }\n\n    const toggleCalendar = (e) =>{\n        e.preventDefault();\n\n        if (e.target.classList.contains('timestamp-start') || e.target.classList.contains('calendar-timestamp-start')) {\n            setStartCalActive(true)\n        } else if (e.target.classList.contains('timestamp-end') || e.target.classList.contains('calendar-timestamp-end')) {\n            setEndCalActive(true)\n        } else {\n            setStartCalActive(false)\n            setEndCalActive(false)\n        }\n    }\n\n    const handleCreate = () => {\n        let event = {\n            title,\n            organizerName,\n            eventType,\n            eventCategory,\n            venueName,\n            address,\n            timestampStart: moment(`${eventStartDate} ${eventStartTime}`).tz('America/New_York').format(),\n            timestampEnd: moment(`${eventEndDate} ${eventEndTime}`).tz('America/New_York').format(),\n            capacity,\n            price,\n            description,\n            organizerId: currentUser.id\n        }\n        setErrors([])\n        return dispatch(eventActions.createEvent(event))\n            // .catch(async (res) => {\n            //     let data;\n            //     try {\n            //         data = await res.clone().json();\n            //     } catch {\n            //         data = await res.text();\n            //     }\n            //     if (data?.errors) setErrors(data.errors);\n            //     else if (data) setErrors([data]);\n            //     else setErrors([res.statusText]);\n            // })\n            .then(() =>{history.push(`/organizer/events`)});\n    };\n\n    return (\n        <>\n            {currentUser ? <NavBarLoggedIn /> : <></>}\n            <br /><br />\n            \n            <br />\n            <div id='back-to-organized-events'>\n                <Link to='/organizer/events'><span><svg id=\"chevron-left-chunky_svg__eds-icon--chevron-left-chunky_svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\" ><path id=\"chevron-left-chunky_svg__eds-icon--chevron-left-chunky_base\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.8 7l-5 5 5 5 1.4-1.4-3.6-3.6 3.6-3.6z\"></path></svg>\n                Events</span></Link>\n            </div>\n\n            <br /><br/><br/>\n            <form className='centered-create-event' onClick={(e) =>{toggleCalendar(e); focusInput(e)}}>\n                <section id='basic-info'>\n                    <div id='basic-info-description-box'>\n                        <svg id=\"title-edit-svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"title-edit_svg__eds-icon--title-edit_base\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 2v3h1V3h5v10H6v1h5v-1H9V3h5v2h1V2H2z\"></path><g id=\"title-edit_svg__eds-icon--title-edit_lines\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"><path d=\"M15 9h7v1h-7zM15 13h7v1h-7zM6 17h16v1H6zM6 21h16v1H6z\"></path></g></svg>\n                        <h2 id='basic-info-h2'>Basic Info</h2>\n                        <div id='basic-info-p-container'>\n                            <p>\n                                Name your event and tell event-goers why they should come. Add details that highlight what makes it unique.\n                            </p>\n                        </div>\n                    </div>\n\n                    <div className='create-event-field-box'>\n                        <div className='create-event-field-text'>\n                            Event Title <text style={{ color: 'red' }}>*</text>\n                        </div>\n\n                        <br />\n\n                        <span className='create-event-field-input-box'>\n                            <label>\n                                <input className='create-event-field-input'\n                                    type='text' \n                                    name='title'\n                                    placeholder=\"Be deceptive and misleading. Don't arouse suspicion.\"\n                                    onChange={e => setTitle(e.target.value)}\n                                    onFocus={e => setClosestDivsActive(e)}\n                                    onBlur={e => setClosestDivsInactive(e)}\n                                />\n                            </label>\n                        </span>\n                    </div>\n                    \n                    <div className='create-event-organizer-box'>\n                        <div className='create-event-field-text'>\n                            Organizer\n                        </div>\n\n                        <br />\n\n                        <span className='create-event-field-input-box'>\n                            <label>\n                                <input className='create-event-field-organizer-input'\n                                    type='text' \n                                    name='title'\n                                    placeholder=\"Fake names are fine. Avoid giving out details that could help slayers track us.\"\n                                    onChange={e => setTitle(e.target.value)}\n                                    onFocus={e => setClosestDivsActive(e)}\n                                    onBlur={e => setClosestDivsInactive(e)}\n                                />\n                            </label>\n                        </span>\n                    </div>\n                    <div className='event-type-container'>\n                        <select name='event-type' id=\"event-type-dropdown\" onChange={(e) =>{setEventType(e.target.value)}} defaultValue={eventTypes[0]}>\n                            {eventTypes.map(type =>{\n                                return (\n                                    <option key={type.value} value={type.value} > \n                                        {type.display}\n                                    </option>\n                                )\n                            })}\n                        </select>\n                    </div>\n                    <br/>\n                    <div className='event-category-container'>\n                        <select name='event-category' id=\"event-category-dropdown\" onChange={(e) =>{setEventCategory(e.target.value)}} defaultValue={eventCategories[0]}>\n                            {eventCategories.map(cat =>{\n                                return (\n                                    <option key={cat.value} value={cat.value} > \n                                        {cat.display}\n                                    </option>\n                                )\n                            })}\n                        </select>\n                    </div>\n                </section>\n\n                <hr className='create-event-section-division-hr' id='basic-info-location-division-hr'/>\n\n                <section id='Location-box'>\n                    <div className='location-description-box'>\n                        <svg id=\"map_svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 3c-1.1 0-2 .9-2 2H2v16h17.8c1.1 0 2.1-.9 2.1-2V5c.1-1.1-.8-2-1.9-2zm-.2 17H3V6h15v13h1c0-.6.4-1 1-1 .5 0 .9.4 1 .9-.1.6-.6 1.1-1.2 1.1zm1.2-2.7c-.3-.2-.6-.3-1-.3s-.7.1-1 .3V5c0-.6.4-1 1-1s1 .4 1 1v12.3z\"></path><path id=\"map_svg__eds-icon--map_cross\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.8 12.7l.7-.7-1.1-1 1.1-1-.7-.7-1.1 1-1-1-.7.7 1 1-1 1 .7.7 1-1z\"></path><path id=\"map_svg__eds-icon--map_dash_3_\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 10h2v1h-2z\"></path><path id=\"map_svg__eds-icon--map_dash_2_\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15 12h1v2h-1z\"></path><path id=\"map_svg__eds-icon--map_dash_1_\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 15h2v1h-2z\"></path><path id=\"map_svg__eds-icon--map_dash\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 15h2v1H8z\"></path></svg>\n                        <h2 id='location-h2'>Location</h2>\n                        <div id='location-p-container'>\n                            <p>\n                                Pick a prime spot to amass the largest number of fools you can. The more the bloodier!\n                            </p>\n                        </div>\n                    </div>\n                    <div className='create-event-field-box' id='create-event-venue-box'>\n                        <span className='create-event-field-input-box' id='create-event-venue-input-box'>\n                            <label>\n                                <input className='create-event-field-input'\n                                    id='create-event-venue-input'\n                                    type='text' \n                                    name='venue-name'\n                                    placeholder=\"Open air venues are best - no invitation inside needed. Make sure to check the weather forecast.\"\n                                    onChange={e => {setVenueName(e.target.value);setAddress(e.target.value)}}\n                                    onFocus={e => setClosestDivsActive(e)}\n                                    onBlur={e => setClosestDivsInactive(e)}\n                                />\n                                <svg id=\"magnifying-glass-venue\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"magnifying-glass-chunky_svg__eds-icon--magnifying-glass-chunky_base\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10 14c2.2 0 4-1.8 4-4s-1.8-4-4-4-4 1.8-4 4 1.8 4 4 4zm3.5.9c-1 .7-2.2 1.1-3.5 1.1-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6c0 1.3-.4 2.5-1.1 3.4l5.1 5.1-1.5 1.5-5-5.1z\"></path></svg>\n                            </label>\n                        </span>\n                    </div>\n                </section>\n\n                <hr className='create-event-section-division-hr' id='location-date-division-hr'/>\n                \n                <section id='date-and-time'>\n                <div className='datetime-description-box'>\n                    <svg id=\"calendar_svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"calendar_svg__eds-icon--calendar_base\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17 4V2h-1v2H8V2H7v2H2v18h20V4h-5zm4 17H3V9h18v12zM3 8V5h4v1h1V5h8v1h1V5h4v3H3z\"></path><g id=\"calendar_svg__eds-icon--calendar_squares\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"><path d=\"M15 16h2v2h-2zM11 16h2v2h-2zM7 16h2v2H7zM15 12h2v2h-2zM11 12h2v2h-2zM7 12h2v2H7z\"></path></g></svg>\n                        <h2 id='location-h2'>Date and time</h2>\n                        <div id='location-p-container'>\n                            <p>\n                                Choose a day and time to gather your unsuspecting victims together. Nighttime is usually best, unless you're indoors of course.\n                            </p>\n                        </div>\n                    </div>\n                \n                    <div className='event-start-container'>\n                        <div className='event-start-date-container'>\n                            <button className='timestamp-start timestamp-button' >{`${moment(eventStartDate).format('MM/DD/YYYY')}`}\n                                <label><div className='event-datetime-text'>Event Starts</div>\n                                        <Calendar className={`calendar-timestamp-start calendar ${startCalActive ? '' : 'hidden'}`} onChange={setEventStartDate} defaultValue={eventStartDate} />\n                                </label><br/>\n                            </button>\n                        </div>\n                        \n                        <div className='event-start-time-container'>\n                            <label>Start Time\n                                    <select name='event-start-times' id=\"event-start-times\" onChange={(e) =>{setEventStartTime(e.target.value)}} defaultValue={eventStartTime}>\n                                        {[...Array(48).keys()].map(i =>{\n                                            let time = moment(eventEndDate).startOf('day').add(30*i,'minutes').format('hh:mm A')\n                                            return (\n                                                <option key={i} value={time} > \n                                                    {`${moment(eventStartDate).startOf('day').add(30*i,'minutes').format('hh:mm A')}`}\n                                                </option>\n                                            )\n                                        })}\n                                    </select>\n                            </label>\n                        </div>\n                    </div>\n\n                    <br/><br/>\n\n                    <div className='event-end-container'>\n                        <div className='event-end-date-container'>\n                            <label>Event Ends\n                                <button className='timestamp-end timestamp-button' >{`${moment(eventEndDate).format('MM/DD/YYYY')}`}\n                                    <Calendar className={`calendar-timestamp-end calendar ${endCalActive ? '' : 'hidden'}`} onChange={setEventEndDate} defaultValue={eventEndDate} />\n                                </button>\n                            </label><br/>\n                        </div>\n                        \n                        <div className='event-end-time-container'>\n                            <label>End Time\n                                    <select name='event-end-times' id=\"event-end-times\" onChange={(e) =>{setEventEndTime(e.target.value)}} defaultValue={eventEndTime}>\n                                        {[...Array(48).keys()].map(i =>{\n                                            let time = moment(eventEndDate).startOf('day').add(30*i,'minutes').format('h:mm A')\n                                            return (\n                                                <option key={i} value={time}> \n                                                    {`${moment(eventEndDate).startOf('day').add(30*i,'minutes').format('h:mm A')}`}\n                                                </option>\n                                            )\n                                        })}\n                                    </select>\n                            </label>\n                        </div>\n                    </div>\n                </section>\n                <section id='capacity-price-description'>\n                    <br/><br/>\n                    <label>Capacity\n                        <input type='text' name='capacity' onChange={e => setCapacity(e.target.value)} />\n                    </label>\n                    <label>Price\n                        <input type='text' name='price' onChange={e => setPrice(e.target.value)} />\n                    </label>\n                    <label>Description\n                        <input type='text' name='description' onChange={e => setDescription(e.target.value)} />\n                    </label>\n                </section>\n            </form>\n        <div className='event-create-button-box'>\n            <hr id='create-event-bottom-fullscreen-hr' />\n            <button className='create-event-button' onClick={handleCreate}>Create Event</button>\n        </div>\n        </>\n    )\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/SearchEvents.js",["153","154","155","156"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/errorPages/NotFoundErrorPage.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/NavBar/NavBarLoggedIn.js",["157","158"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/NavBar/NavBarLoggedOut.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/ordersReducer.js",["159","160"],[],"import csrfFetch from \"./csrf\";\n\nconst RECEIVE_ORDER = 'receiveOrders';\nconst RECEIVE_USER_ORDERS = 'receiveUserOrders';\nconst RECEIVE_USER_EVENTS = 'receiveUserEvents'\nconst REMOVE_ORDER = 'removeOrders';\n\nexport const getOrder = (orderId) => state => {\n    return state.orders ? state.orders[orderId] : null\n}\n\nexport const getOrders = state => {\n    return state && state.orders ? Object.values(state.orders) : []\n}\n\nexport const fetchOrder = orderId => async dispatch =>{\n    const response = await fetch(`/api/orders/${orderId}`)\n    const data = await response.json();\n\n    if (response.ok) {\n        dispatch({\n            type: RECEIVE_ORDER,\n            order: data.order\n        })\n    }\n    return [data.order, true]\n}\n\nexport const createOrder = (order) => async dispatch => {\n    const response = await csrfFetch(`/api/orders`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(order)\n    })\n    const data = response.json()\n\n    dispatch({\n        type: REMOVE_ORDER,\n        order: data.order\n    })\n}\n\nexport const deleteOrder = (orderId) => async dispatch => {\n    const response = await csrfFetch(`/api/orders/${orderId}`, {\n        method: 'DELETE',\n        headers: {'Content-Type': 'application/json'},\n    })\n\n    dispatch({\n        type: REMOVE_ORDER,\n        orderId: orderId\n    })\n}\n\nconst ordersReducer = (oldState = {}, action) => {\n    let newState = {...oldState}\n    switch (action.type) {\n        // case RECEIVE_ORDERS:    \n        //     newState = {...oldState,...action.orders}\n        //     return newState\n        case RECEIVE_ORDER:\n            newState[action.order.id] = action.order\n            return newState\n        case RECEIVE_USER_EVENTS:\n            newState = {...oldState,...action.orders}\n            return newState\n        case REMOVE_ORDER:\n            delete newState[action.orderId]\n            return newState\n        default:\n            return oldState\n    }\n}\n\nexport default ordersReducer","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/orders/OrderIndex.js",["161"],[],"import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from \"react\";\nimport NavBarLoggedIn from '../NavBar/NavBarLoggedIn';\nimport * as sessionActions from '../../store/sessionReducer';\nimport * as userActions from '../../store/usersReducer';\nimport * as eventActions from '../../store/eventsReducer';\nimport * as orderActions from '../../store/ordersReducer';\nimport './OrderIndex.css'\n\nexport default function OrderIndex () {\n    const dispatch = useDispatch();\n    const currentUserId = useSelector(sessionActions.getCurrentUser).id\n    const currentUser = useSelector(userActions.getUser(currentUserId))\n    const orders = useSelector(orderActions.getOrders).sort((a,b) => b.id - a.id)\n    const events = useSelector(eventActions.getEvents)\n\n    useEffect(() =>{\n        let getData = setTimeout(() => {\n            dispatch(userActions.fetchUserEvents(currentUserId));\n          }, 0)\n        return () => clearTimeout(getData)\n    }, [])\n\n    const pluralizeOrders = () =>{\n        if (currentUser && currentUser.orders.length === 1) {\n            return 'order'\n        } else return 'orders'\n    }\n\n    if (currentUser) {return (\n        <>\n            <NavBarLoggedIn />\n            <main className='order-index-main'>\n                <div className='show-user-name-tile'>\n                    <p>Pic placeholder</p>\n                    <h1 className='show-user-name-tile-name'>{`${currentUser?.firstName} ${currentUser.lastName}`}</h1>\n                    <p>{currentUser?.orders.length} {pluralizeOrders()}</p>\n                </div>\n                <div className='order-index-orders'>\n                    <h2>Orders</h2>\n                    {orders.map(order =>{\n                        const event = events.filter(event => event.id === order.eventId)[0]\n                        return(\n                            <>\n                                <p>order #{order.id}</p>\n                                <p>ordered on {order.createdAt}</p>\n                                <p>{event.title}</p>\n                                <p>{event.date}</p>\n                                <p>{`$${event.price * order.numTickets}` || 'Free order'}</p>\n                            </>\n                        )\n                    })}\n                </div>\n            </main>\n        </>\n    )}\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/orders/OrderShow.js",["162","163"],[],"import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from \"react\";\nimport { useHistory, useParams, Link } from 'react-router-dom';\nimport NavBarLoggedIn from '../NavBar/NavBarLoggedIn';\nimport * as sessionActions from '../../store/sessionReducer';\nimport * as userActions from '../../store/usersReducer';\nimport * as eventActions from '../../store/eventsReducer';\nimport * as orderActions from '../../store/ordersReducer';\nimport './OrderShow.css'\n\nexport default function OrderShow () {\n    const dispatch = useDispatch();\n    const {orderId} = useParams();\n    const currentUserId = useSelector(sessionActions.getCurrentUser).id\n    const currentUser = useSelector(userActions.getUser(currentUserId))\n    const order = useSelector(orderActions.getOrder(orderId))\n    const event = useSelector(eventActions.getEvent(order?.eventId))\n    useEffect(() =>{\n        let getData = setTimeout(() => {\n            dispatch(userActions.fetchUserEvents(currentUserId));\n          }, 0)\n        return () => clearTimeout(getData)\n    }, [])\n\n    return(\n    <>\n        <NavBarLoggedIn /><br/><br/>\n        <div className='order-show-go-back'>\n            <Link to={`/users/${currentUserId}`}>Back to Current Orders</Link>\n        </div>\n        <div className='order-show-title-box'>\n            <h1 className='order-show-title'>Order for <Link to={`/events/${event?.id}`}>{event?.title}</Link></h1>\n            <p className='order-show-info'>\n                {event?.price ? `$${order.numTickets * event.price}` : `Free`} order #{order?.id} on {order?.createdAt}<br/>\n                <b>Event Information:</b>: from {event?.timestampStart} to {event?.timestampEnd}<br/>\n                {event?.address}\n            </p>\n        </div>\n        <div className='order-show-lower-box'>\n            <button>Cancel Order</button>\n            <div className='order-show-ticket-info'>\n                <h2 className='order-show-ticket-count'>({order?.numTickets}x) General Admission</h2><br/>\n                <h3>Contact Information</h3><br/>\n                <h4>First Name</h4><br/>\n                {currentUser?.firstName}<br/>\n                <h4>Last Name</h4><br/>\n                {currentUser?.lastName}<br/>\n                <h4>Email</h4><br/>\n                {currentUser?.email}\n            </div>\n        </div>\n        <div className='order-show-go-back'>\n            <Link to={`/users/${currentUserId}`}>Back to Current Orders</Link>\n        </div>\n    </>\n    )\n}",{"ruleId":"164","severity":1,"message":"165","line":6,"column":10,"nodeType":"166","messageId":"167","endLine":6,"endColumn":24},{"ruleId":"164","severity":1,"message":"168","line":7,"column":25,"nodeType":"166","messageId":"167","endLine":7,"endColumn":36},{"ruleId":"164","severity":1,"message":"169","line":13,"column":10,"nodeType":"166","messageId":"167","endLine":13,"endColumn":20},{"ruleId":"164","severity":1,"message":"170","line":13,"column":22,"nodeType":"166","messageId":"167","endLine":13,"endColumn":31},{"ruleId":"164","severity":1,"message":"171","line":13,"column":33,"nodeType":"166","messageId":"167","endLine":13,"endColumn":43},{"ruleId":"164","severity":1,"message":"172","line":15,"column":13,"nodeType":"166","messageId":"167","endLine":15,"endColumn":27},{"ruleId":"164","severity":1,"message":"173","line":25,"column":16,"nodeType":"166","messageId":"167","endLine":25,"endColumn":27},{"ruleId":"164","severity":1,"message":"174","line":72,"column":11,"nodeType":"166","messageId":"167","endLine":72,"endColumn":19},{"ruleId":"164","severity":1,"message":"175","line":6,"column":7,"nodeType":"166","messageId":"167","endLine":6,"endColumn":26},{"ruleId":"164","severity":1,"message":"176","line":28,"column":17,"nodeType":"166","messageId":"167","endLine":28,"endColumn":31},{"ruleId":"177","severity":1,"message":"178","line":90,"column":33,"nodeType":"179","endLine":90,"endColumn":173},{"ruleId":"180","severity":1,"message":"181","line":14,"column":31,"nodeType":"182","messageId":"183","endLine":14,"endColumn":60,"fix":"184"},{"ruleId":"185","severity":1,"message":"186","line":22,"column":8,"nodeType":"187","endLine":22,"endColumn":10,"suggestions":"188"},{"ruleId":"164","severity":1,"message":"189","line":13,"column":9,"nodeType":"166","messageId":"167","endLine":13,"endColumn":21},{"ruleId":"185","severity":1,"message":"190","line":27,"column":8,"nodeType":"187","endLine":27,"endColumn":10,"suggestions":"191"},{"ruleId":"164","severity":1,"message":"192","line":54,"column":12,"nodeType":"166","messageId":"167","endLine":54,"endColumn":18},{"ruleId":"185","severity":1,"message":"193","line":17,"column":8,"nodeType":"187","endLine":17,"endColumn":10,"suggestions":"194"},{"ruleId":"185","severity":1,"message":"186","line":24,"column":8,"nodeType":"187","endLine":24,"endColumn":10,"suggestions":"195"},{"ruleId":"164","severity":1,"message":"196","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"197","line":32,"column":8,"nodeType":"187","endLine":32,"endColumn":10,"suggestions":"198"},{"ruleId":"185","severity":1,"message":"199","line":67,"column":8,"nodeType":"187","endLine":67,"endColumn":20,"suggestions":"200"},{"ruleId":"164","severity":1,"message":"201","line":1,"column":20,"nodeType":"166","messageId":"167","endLine":1,"endColumn":29},{"ruleId":"164","severity":1,"message":"176","line":28,"column":17,"nodeType":"166","messageId":"167","endLine":28,"endColumn":31},{"ruleId":"177","severity":1,"message":"178","line":87,"column":33,"nodeType":"179","endLine":87,"endColumn":173},{"ruleId":"164","severity":1,"message":"201","line":1,"column":27,"nodeType":"166","messageId":"167","endLine":1,"endColumn":36},{"ruleId":"164","severity":1,"message":"202","line":17,"column":27,"nodeType":"166","messageId":"167","endLine":17,"endColumn":43},{"ruleId":"164","severity":1,"message":"192","line":27,"column":12,"nodeType":"166","messageId":"167","endLine":27,"endColumn":18},{"ruleId":"164","severity":1,"message":"176","line":67,"column":17,"nodeType":"166","messageId":"167","endLine":67,"endColumn":31},{"ruleId":"164","severity":1,"message":"196","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":14},{"ruleId":"164","severity":1,"message":"203","line":14,"column":11,"nodeType":"166","messageId":"167","endLine":14,"endColumn":22},{"ruleId":"164","severity":1,"message":"204","line":15,"column":11,"nodeType":"166","messageId":"167","endLine":15,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":23,"column":8,"nodeType":"187","endLine":23,"endColumn":10,"suggestions":"205"},{"ruleId":"164","severity":1,"message":"206","line":5,"column":13,"nodeType":"166","messageId":"167","endLine":5,"endColumn":25},{"ruleId":"185","severity":1,"message":"186","line":21,"column":8,"nodeType":"187","endLine":21,"endColumn":10,"suggestions":"207"},{"ruleId":"164","severity":1,"message":"175","line":4,"column":7,"nodeType":"166","messageId":"167","endLine":4,"endColumn":26},{"ruleId":"164","severity":1,"message":"174","line":44,"column":11,"nodeType":"166","messageId":"167","endLine":44,"endColumn":19},{"ruleId":"185","severity":1,"message":"186","line":22,"column":8,"nodeType":"187","endLine":22,"endColumn":10,"suggestions":"208"},{"ruleId":"164","severity":1,"message":"209","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":23,"column":8,"nodeType":"187","endLine":23,"endColumn":10,"suggestions":"210"},"no-unused-vars","'restoreSession' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'createUser' is defined but never used.","'loginUser' is defined but never used.","'logoutUser' is defined but never used.","'sessionActions' is defined but never used.","'restoreCSRF' is defined but never used.","'response' is assigned a value but never used.","'RECEIVE_USER_ORDERS' is assigned a value but never used.","'textFieldTitle' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-whitespace-before-property","Unexpected whitespace before property organizedEvents.","MemberExpression","unexpectedWhitespace",{"range":"211","text":"212"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUserId' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["213"],"'current_user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'eventId'. Either include them or remove the dependency array.",["214"],"'errors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["215"],["216"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUserId', 'dispatch', and 'eventId'. Either include them or remove the dependency array.",["217"],"React Hook useEffect has a missing dependency: 'handlePlusMinusClick'. Either include it or remove the dependency array.",["218"],"'useEffect' is defined but never used.","'setOrganizerName' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'allEvents' is assigned a value but never used.",["219"],"'eventActions' is defined but never used.",["220"],["221"],"'useHistory' is defined but never used.",["222"],[669,672],"?.",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"223","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"223","fix":"234"},{"desc":"223","fix":"235"},{"desc":"223","fix":"236"},{"desc":"223","fix":"237"},"Update the dependencies array to be: [currentUserId, dispatch]",{"range":"238","text":"239"},"Update the dependencies array to be: [dispatch, eventId]",{"range":"240","text":"241"},"Update the dependencies array to be: [dispatch]",{"range":"242","text":"243"},{"range":"244","text":"239"},"Update the dependencies array to be: [currentUserId, dispatch, eventId]",{"range":"245","text":"246"},"Update the dependencies array to be: [handlePlusMinusClick, numTickets]",{"range":"247","text":"248"},{"range":"249","text":"239"},{"range":"250","text":"239"},{"range":"251","text":"239"},{"range":"252","text":"239"},[1076,1078],"[currentUserId, dispatch]",[998,1000],"[dispatch, eventId]",[535,537],"[dispatch]",[995,997],[1405,1407],"[currentUserId, dispatch, eventId]",[2496,2508],"[handlePlusMinusClick, numTickets]",[885,887],[863,865],[962,964],[1052,1054]]