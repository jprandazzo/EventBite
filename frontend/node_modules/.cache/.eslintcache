[{"/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/index.js":"1","/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/reportWebVitals.js":"2","/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/store/sessionReducer.js":"3","/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/App.js":"4","/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/store/usersReducer.js":"5","/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/store/index.js":"6","/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/store/csrf.js":"7","/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/components/users/SignUpForm.js":"8","/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/components/users/SignInForm.js":"9"},{"size":1725,"mtime":1690214133654,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1689882403602,"results":"12","hashOfConfig":"11"},{"size":2588,"mtime":1690229488346,"results":"13","hashOfConfig":"11"},{"size":805,"mtime":1690129422124,"results":"14","hashOfConfig":"11"},{"size":2102,"mtime":1690225527119,"results":"15","hashOfConfig":"11"},{"size":806,"mtime":1690217976968,"results":"16","hashOfConfig":"11"},{"size":585,"mtime":1690225510890,"results":"17","hashOfConfig":"11"},{"size":1860,"mtime":1690225505636,"results":"18","hashOfConfig":"11"},{"size":1941,"mtime":1690221439210,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"1de021e",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"24"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"24"},"/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/index.js",["54","55","56","57","58"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { restoreSession } from './store/sessionReducer.js';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport configureStore from './store';\nimport * as sessionActions from './store/sessionReducer'\nimport { csrfFetch } from './store/csrf';\nimport { createUser, loginUser, logoutUser } from './store/usersReducer'; \n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== \"production\") {\n  window.csrfFetch = csrfFetch;\n  window.sessionActions = sessionActions;\n  window.store = store;\n}\n\n// let currentUser = sessionStorage.getItem('currentUser') ? JSON.parse(sessionStorage.getItem('currentUser')) : null;\nlet initialState = {};\n\n// if (currentUser) {\n//   initialState = {\n//       users: {\n//       [currentUser.id]: currentUser\n//       }\n//   };\n// };\n\nconst initializeApp = () => {\n  root.render(\n    <React.StrictMode>\n      <ReduxProvider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </ReduxProvider>\n    </React.StrictMode>\n  );\n}\n\nif (\n  sessionStorage.getItem('currentUser') === null ||\n  sessionStorage.getItem('X-CSRF-Token') === null\n) {\nstore.dispatch(sessionActions.restoreSession()).then(initializeApp)\n} else {\ninitializeApp();\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/reportWebVitals.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/store/sessionReducer.js",["59"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/App.js",["60"],[],"import './App.css';\nimport React from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport SignUpForm from './components/users/SignUpForm';\nimport SignInForm from './components/users/SignInForm';\n\nfunction App() {\n  return (\n    <>\n    <h1>Vampires!</h1>\n    {/* <a href='/signup'>Sign Up</a> */}\n    \n    <Switch>\n      <Route path=\"/signup\"> <SignUpForm /> </Route>\n      <Route path=\"/signin\"> <SignInForm /> </Route>\n      {/* <Route path=\"/signin\"> <SignUpForm /> </Route> */}\n\n      {/* <Route exact path=\"/\" component={EventIndex} />\n      <Route path=\"/events/new\" component={EventForm} />\n      <Route exact path=\"/events/:eventId\" component={EventShow} />\n      <Route path=\"/events/:eventId/edit\" component={EventForm} /> */}\n    </Switch>\n    </>\n  );\n}\n\nexport default App;","/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/store/usersReducer.js",["61"],[],"import { csrfFetch } from \"./csrf\"\n\nexport const RECEIVE_USER = 'users/RECEIVE_USER'\nexport const REMOVE_USER = 'users/REMOVE_USER'\n\nexport const fetchUser = (userId) => async dispatch => {\n    const response = await fetch(`/api/users/${userId}`)\n    const data = await response.json();\n\n    dispatch({\n        type: RECEIVE_USER,\n        user: data\n    })\n}\n\nexport const createUser = (user) => async dispatch => {\n    const response = await csrfFetch(`/api/users/`, {\n        method: 'POST',\n        body: JSON.stringify(user)\n    })\n    const data = await response.json();\n\n    sessionStorage.setItem('currentUser', JSON.stringify(data.user));\n    dispatch({\n        type: RECEIVE_USER,\n        user: data\n    })\n}\n\nexport const loginUser = user => async dispatch => {\n    let res = await csrfFetch('/api/session', {\n        method: 'POST',\n        body: JSON.stringify(user)\n    });\n    // debugger\n    let data = await res.json();\n    // debugger\n    sessionStorage.setItem('currentUser', JSON.stringify(data.user));\n    // debugger\n    dispatch({\n        type: RECEIVE_USER,\n        user: data\n    })\n};\n\nexport const logoutUser = userId => async dispatch => {\n    let res = await csrfFetch('/api/session', {\n        method: 'DELETE'\n    });\n    sessionStorage.setItem('currentUser', null)\n    dispatch({\n        type: REMOVE_USER,\n        userId: userId\n    });\n}\n\nexport const updateUser = (user) => async dispatch => {\n    const response = await csrfFetch(`/api/users/${user.id}`, {\n        method: 'PATCH',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(user)\n    })\n    const data = await response.json();\n\n    dispatch({\n        type: RECEIVE_USER,\n        user: data\n    })\n}\n\nexport default function usersReducer(state = {}, action) {\n    let newState = {...state};\n\n    switch(action.type) {\n        case RECEIVE_USER:\n            newState[action.user.id] = action.user;\n            return newState;\n        case REMOVE_USER:\n            delete newState[action.userId];\n            return newState;\n        default:\n            return state;\n    }\n}\n","/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/store/index.js",["62"],[],"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport usersReducer from './usersReducer';\nimport sessionReducer from './sessionReducer';\n// import eventsReducer from './events';\n\nconst rootReducer = combineReducers({\n  // users: usersReducer,\n  session: sessionReducer/*,\n  events: eventsReducer*/\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\n\n\nexport default function configureStore (preloadedState = {}) {\n    return createStore(rootReducer, preloadedState, enhancer)\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/store/csrf.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/components/users/SignUpForm.js",["63","64","65"],[],"import React, { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport {signup} from '../../store/sessionReducer';\nimport { createUser, fetchUser } from \"../../store/usersReducer\";\n\nexport default function SignUpForm () {\n    const dispatch = useDispatch();\n\n    // need to set a sessionUser such that if present, redirect and do \n    // not allow user to sign up\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [errors, setErrors] = useState([]);\n\n    // useEffect(() =>{\n    //     setFirstName(firstName)\n    // }, [])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // debugger\n\n        return dispatch(signup({email, password, firstName, lastName}))\n    }\n    return(\n        <>\n            <form onSubmit={handleSubmit}>\n                <ul>\n                    {errors.map(error => <li>{error}</li>)}\n                </ul>\n                <label>Email\n                    <input type='text' name='email' onChange={e => setEmail(e.target.value)}></input>\n                </label>\n                <br />\n                <label>Password\n                    <input type='password' name='password' onChange={e => setPassword(e.target.value)}></input>\n                </label>\n                <br />\n                <label>First Name\n                    <input type='text' name='firstName' onChange={e => setFirstName(e.target.value)} />\n                </label>\n                <br />\n                <label>Last Name\n                    <input type='text' name='lastName' onChange={e => setLastName(e.target.value)} />\n                </label>\n                <br />\n                <input type='submit' value='Sign Up' />\n            </form>\n        </>\n    )\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/components/users/SignInForm.js",["66","67","68"],[],"import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport {login} from \"../../store/sessionReducer\"\nimport { createUser, fetchUser, loginUser } from \"../../store/usersReducer\";\n\nexport default function SignInForm () {\n    const dispatch = useDispatch();\n    // need to set a sessionUser such that if present, redirect and do \n    // not allow user to sign up\n    // const [firstName, setFirstName] = useState('')\n    // const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [errors, setErrors] = useState([]);\n\n    // useEffect(() =>{\n    //     setFirstName(firstName)\n    // }, [])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        setErrors([])\n        // let user = {email, password}\n        return dispatch(login({email, password}))\n            .catch(async (res) => {\n                let data;\n                try {\n                    data = await res.clone().json();\n                } catch {\n                    data = await res.text();\n                }\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n            });\n    };\n    return(\n        <>\n            <form /*onSubmit={handleSubmit}*/>\n                <ul>\n                    {errors.map(error => <li>{error}</li>)}\n                </ul>\n                <label>Email\n                    <input type='text' name='email' onChange={e => setEmail(e.target.value)}></input>\n                </label>\n                <br />\n                <label>Password\n                    <input type='password' name='password' onChange={e => setPassword(e.target.value)}></input>\n                </label>\n                <br />\n                <button onClick={handleSubmit}>Sign In</button>\n            </form>\n        </>\n    )\n}",{"ruleId":"69","severity":1,"message":"70","line":6,"column":10,"nodeType":"71","messageId":"72","endLine":6,"endColumn":24},{"ruleId":"69","severity":1,"message":"73","line":12,"column":10,"nodeType":"71","messageId":"72","endLine":12,"endColumn":20},{"ruleId":"69","severity":1,"message":"74","line":12,"column":22,"nodeType":"71","messageId":"72","endLine":12,"endColumn":31},{"ruleId":"69","severity":1,"message":"75","line":12,"column":33,"nodeType":"71","messageId":"72","endLine":12,"endColumn":43},{"ruleId":"69","severity":1,"message":"76","line":24,"column":5,"nodeType":"71","messageId":"72","endLine":24,"endColumn":17},{"ruleId":"69","severity":1,"message":"77","line":20,"column":16,"nodeType":"71","messageId":"72","endLine":20,"endColumn":27},{"ruleId":"69","severity":1,"message":"78","line":3,"column":25,"nodeType":"71","messageId":"72","endLine":3,"endColumn":29},{"ruleId":"69","severity":1,"message":"79","line":47,"column":9,"nodeType":"71","messageId":"72","endLine":47,"endColumn":12},{"ruleId":"69","severity":1,"message":"80","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":20},{"ruleId":"69","severity":1,"message":"73","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":20},{"ruleId":"69","severity":1,"message":"81","line":4,"column":22,"nodeType":"71","messageId":"72","endLine":4,"endColumn":31},{"ruleId":"69","severity":1,"message":"82","line":15,"column":20,"nodeType":"71","messageId":"72","endLine":15,"endColumn":29},{"ruleId":"69","severity":1,"message":"73","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":20},{"ruleId":"69","severity":1,"message":"81","line":4,"column":22,"nodeType":"71","messageId":"72","endLine":4,"endColumn":31},{"ruleId":"69","severity":1,"message":"74","line":4,"column":33,"nodeType":"71","messageId":"72","endLine":4,"endColumn":42},"no-unused-vars","'restoreSession' is defined but never used.","Identifier","unusedVar","'createUser' is defined but never used.","'loginUser' is defined but never used.","'logoutUser' is defined but never used.","'initialState' is assigned a value but never used.","'restoreCSRF' is defined but never used.","'Link' is defined but never used.","'res' is assigned a value but never used.","'usersReducer' is defined but never used.","'fetchUser' is defined but never used.","'setErrors' is assigned a value but never used."]