[{"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/index.js":"1","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/App.js":"2","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/sessionReducer.js":"3","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/reportWebVitals.js":"4","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/eventsReducer.js":"5","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/usersReducer.js":"6","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/index.js":"7","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/csrf.js":"8","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/SignUpForm.js":"9","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/OrganizerEventIndex.js":"10","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/EditEvent.js":"11","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/AllEvents.js":"12","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/SplashPage.js":"13","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/ShowEvent.js":"14","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/SignInForm.js":"15","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/CreateEvent.js":"16","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/SearchEvents.js":"17","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/errorPages/NotFoundErrorPage.js":"18","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/NavBar/NavBarLoggedIn.js":"19","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/NavBar/NavBarLoggedOut.js":"20","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/ordersReducer.js":"21","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/orders/OrderIndex.js":"22","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/orders/OrderShow.js":"23","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/likes/LikedEvents.js":"24","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/searchReducer.js":"25"},{"size":1612,"mtime":1692923987154,"results":"26","hashOfConfig":"27"},{"size":2041,"mtime":1692915033683,"results":"28","hashOfConfig":"27"},{"size":3027,"mtime":1692914945137,"results":"29","hashOfConfig":"27"},{"size":362,"mtime":1689882403602,"results":"30","hashOfConfig":"27"},{"size":2721,"mtime":1692834148975,"results":"31","hashOfConfig":"27"},{"size":2038,"mtime":1692892859237,"results":"32","hashOfConfig":"27"},{"size":944,"mtime":1691072003067,"results":"33","hashOfConfig":"27"},{"size":568,"mtime":1690693397997,"results":"34","hashOfConfig":"27"},{"size":8641,"mtime":1692653502710,"results":"35","hashOfConfig":"27"},{"size":7482,"mtime":1692979304093,"results":"36","hashOfConfig":"27"},{"size":28553,"mtime":1691143977433,"results":"37","hashOfConfig":"27"},{"size":1468,"mtime":1690668196183,"results":"38","hashOfConfig":"27"},{"size":5871,"mtime":1692922951749,"results":"39","hashOfConfig":"27"},{"size":12007,"mtime":1692978305329,"results":"40","hashOfConfig":"27"},{"size":8782,"mtime":1692923743782,"results":"41","hashOfConfig":"27"},{"size":29371,"mtime":1692842963500,"results":"42","hashOfConfig":"27"},{"size":15583,"mtime":1694791751034,"results":"43","hashOfConfig":"27"},{"size":299,"mtime":1690576131976,"results":"44","hashOfConfig":"27"},{"size":9191,"mtime":1694729856596,"results":"45","hashOfConfig":"27"},{"size":7647,"mtime":1692911228885,"results":"46","hashOfConfig":"27"},{"size":2011,"mtime":1690700039135,"results":"47","hashOfConfig":"27"},{"size":6241,"mtime":1692889914827,"results":"48","hashOfConfig":"27"},{"size":2648,"mtime":1691110035679,"results":"49","hashOfConfig":"27"},{"size":6496,"mtime":1692892246948,"results":"50","hashOfConfig":"27"},{"size":1052,"mtime":1691151200709,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rxi2wg",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"65"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/index.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/App.js",[],[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/sessionReducer.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/reportWebVitals.js",[],[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/eventsReducer.js",["142"],[],"import csrfFetch from \"./csrf\";\n\nconst RECEIVE_EVENT = 'events/receiveEvent'\nconst RECEIVE_EVENTS = 'events/receiveEvents'\nconst REMOVE_EVENT = 'events/removeEvent'\nconst RECEIVE_USER_EVENTS = 'receiveUserEvents'\n\n// get events from store\nexport const getEvents = (state) => {\n    return state && state.events ? Object.values(state.events) : []\n}\n\nexport const getEvent = (eventId) => state => {\n    return state.events ? state.events[eventId] : null\n}\n\n// dispatch actions\n\nexport const fetchEvents = () => async dispatch => {\n    const response = await fetch('/api/events')\n    const data = await response.json()\n    \n    dispatch({\n        type: RECEIVE_EVENTS,\n        events: data.events\n    })\n    return [data.events, true]\n}\n\nexport const fetchEvent = (eventId) => async dispatch => {\n    const response = await fetch(`/api/events/${eventId}`)\n    const data = await response.json();\n\n    if (response.ok) {\n        dispatch({\n            type: RECEIVE_EVENT,\n            event: data.event\n        })\n    }\n    return [data.event, true]\n}\n\nexport const createEvent = (event) => async dispatch => {\n    \n    const response = await csrfFetch(`/api/events/`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(event)\n    })\n\n    const data = await response.json();\n\n    dispatch({\n        type: RECEIVE_EVENT,\n        event: data.event\n    })\n    return response\n}\n\nexport const updateEvent = (event) => async dispatch => {\n    const response = await csrfFetch(`/api/events/${event.id}`, {\n        method: 'PATCH',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(event)\n    })\n    const data = await response.json();\n    dispatch({\n        type: RECEIVE_EVENT,\n        event: data.event\n    })\n}\n\nexport const deleteEvent = (eventId) => async dispatch => {\n    const response = await csrfFetch(`/api/events/${eventId}`, {\n        method: 'DELETE',\n        headers: {'Content-Type': 'application/json'},\n    })\n\n    dispatch({\n        type: REMOVE_EVENT,\n        eventId: eventId\n    })\n}\n\nconst eventsReducer = (oldState = {}, action) => {\n    let newState = {...oldState}\n    switch (action.type) {\n        case RECEIVE_EVENTS:    \n            newState = {...oldState,...action.events}\n            return newState\n        case RECEIVE_EVENT:\n            newState[action.event.id] = action.event\n            return newState\n        case RECEIVE_USER_EVENTS:\n            newState = {...oldState,...action.events}\n            return newState\n        case REMOVE_EVENT:\n            delete newState[action.eventId]\n            return newState\n        default:\n            return oldState\n    }\n}\n\nexport default eventsReducer","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/usersReducer.js",["143"],[],"import csrfFetch from \"./csrf\"\n\nconst RECEIVE_USER = 'receiveUser'\nconst REMOVE_USER = 'users/removeUser'\nconst RECEIVE_USER_EVENTS = 'receiveUserEvents'\nconst RECEIVE_USER_ORDERS = 'receiveUserOrders';\n\nexport const getUser = (userId) => state => {\n    return state.users ? state.users[userId] : null\n}\n\nexport const fetchUser = (userId) => async dispatch => {\n    const response = await fetch(`/api/users/${userId}`)\n    const data = await response.json();\n    \n    dispatch({\n        type: RECEIVE_USER,\n        user: data.user\n    })\n}\n\nexport const fetchUserEvents = (userId) => async dispatch => {\n    const response = await fetch(`/api/users/${userId}`);\n    const data = await response.json();\n    dispatch({\n        type: RECEIVE_USER_EVENTS,\n        user: data.user,\n        events: data.events,\n        orders: data.orders\n    })\n    return data\n}\n\nexport const updateUser = (user) => async dispatch => {\n    const response = await csrfFetch(`/api/users/${user.id}`, {\n        method: 'PATCH',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(user)\n    })\n    const data = await response.json();\n    dispatch({\n        type: RECEIVE_USER,\n        user: data.user\n    })\n}\n\nexport const deleteUser = (userId) => async dispatch => {\n    const response = await csrfFetch(`/api/users/${userId}`, {\n        method: 'DELETE',\n        headers: {'Content-Type': 'application/json'},\n    })\n\n    if (response.ok) {\n        dispatch({\n            type: REMOVE_USER,\n            userId: userId\n        })\n    }\n}\n\nexport default function usersReducer(state = {}, action) {\n    let newState = {...state};\n\n    switch(action.type) {\n        case RECEIVE_USER:\n            newState[action.user?.id] = action.user;\n            return newState;\n        case RECEIVE_USER_EVENTS:\n            newState[action.user.id] = action.user\n            return newState\n        case REMOVE_USER:\n            delete newState[action.userId];\n            return newState;\n        default:\n            return state;\n    }\n}\n","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/index.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/csrf.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/SignUpForm.js",["144","145","146"],[],"import React, { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Link, useHistory } from 'react-router-dom';\nimport * as sessionActions from \"../../store/sessionReducer\"\nimport './Authentication.css';\n\nexport default function SignUpForm () {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // need to set a sessionUser such that if present, redirect and do \n    // not allow user to sign up\n\n    const currentUser = useSelector(sessionActions.getCurrentUser)\n    if (currentUser) history.push('/')\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [errors, setErrors] = useState([]);\n    const errorClassesArray = ['error-text', 'error-div', 'login-errors', 'email-errors', 'pw-errors'];\n\n    const blurOtherInput = (selectedEl) => {\n        let arr = Array.from(document.querySelectorAll('*'))\n        arr.forEach(el=> {\n            if (el.classList.contains('.signup-signin-field-input')) {\n                if (el !== selectedEl) el.blur()\n            } else if (el.classList.contains('auth-input-box')) {\n                if (el !== selectedEl) el.classList.remove('active-div')\n            } else if (el.classList.contains('signup-signin-field-title')) {\n                if (el !== selectedEl) el.classList.remove('active-input')\n            }\n        })\n    }\n    const focusInput = async (e) => {\n        e.stopPropagation()\n        const selectedEl = e.target\n        //blur anything that's currently focused\n        await blurOtherInput(selectedEl)\n        \n        //whichever div is clicked, find its input and focus it\n        if (selectedEl.classList.contains('auth-input-box')) {\n            e.stopPropagation()\n            if (selectedEl.classList.contains('error-div')) e.target.classList.remove('error-div')\n            let textFieldTitle = Array.from(selectedEl.childNodes).filter(el => el.classList.length && el.classList.contains('signup-signin-field-title'))[0]\n            textFieldTitle.classList.remove('error-text')\n            let input = Array.from(selectedEl.querySelectorAll('*')).filter(el=>el.classList.contains('signup-signin-field-input'))[0]\n            input.focus()\n        } else if (selectedEl.classList.contains('signup-signin-field-title')) {\n            e.stopPropagation()\n            if (selectedEl.classList.contains('error-input')) selectedEl.classList.remove('error-input')\n            let outerDiv = selectedEl.parentNode\n            outerDiv.classList.remove('error-div')\n            let input = Array.from(outerDiv.querySelectorAll('*')).filter(el=>el.classList.contains('signup-signin-field-input'))[0]\n            input.focus()\n\n        } else if (selectedEl.classList.contains('signup-signin-field-input')) {\n            e.stopPropagation()\n            selectedEl.focus()\n        }\n    }\n\n    function setClosestDivsActive(e){\n        // document.querySelectorAll('*').forEach(el=>if ())\n        //add 'focus' class to both surrounding divs of the input\n        //that was focused\n        // debugger\n        let outerDiv = e.target.closest('div')\n        outerDiv.classList.add('active-div')\n\n        let textFieldTitle = Array.from(outerDiv.childNodes).filter(el => el.className === 'signup-signin-field-title')[0]\n        console.log(outerDiv)\n        console.log(textFieldTitle)\n        textFieldTitle.classList.add('active-input')\n    }\n\n    function setClosestDivsInactive(e) {\n        //remove 'focus' class from both surrounding divs of the input\n        //that was blurred\n        let outerDiv = e.target.closest('div')\n        outerDiv.classList.remove('active-div')\n        let textFieldTitle = Array.from(outerDiv.childNodes).filter(el => el.classList.contains('signup-signin-field-title'))[0]\n        textFieldTitle.classList.remove('active-input')\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        let firstName = 'joe';\n        let lastName = 'ra';\n\n\n        return dispatch(sessionActions.signup({email, password, firstName, lastName}))\n            .catch(async (res) => {\n                let data;\n                try {\n                // .clone() essentially allows you to read the response body twice\n                data = await res.clone().json();\n                } catch {\n                data = await res.text(); // Will hit this case if, e.g., server is down\n                }\n                if (data?.errors) setErrors(data.errors);\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n            })\n    }\n\n    return(\n        <>\n            <main onClick={e => focusInput(e)}>\n            <section className='split split-left' id='signin'>\n                    <div className='auth-centered' id='signup-centered'>\n                        <div className='auth-container' id='signup-container'>\n                            <div id='eblogo-auth'>\n                                <Link to='/'>\n                                    <img src='https://eventbite-dev.s3.amazonaws.com/eventbite+logo.jpg' />\n                                </Link>\n                            </div>\n                            <h1 id='signup-signin-h1'>Create an account</h1>\n                            <form>\n                                <div className={errors.length ? `error-div auth-input-box` :`auth-input-box`}>\n                                    <div className={errors.length ? 'error-text signup-signin-field-title' : 'signup-signin-field-title'}>\n                                        Email address\n                                    </div>\n\n                                    <br />\n\n                                    <span >\n                                        <label>\n                                            <input className='signup-signin-field-input'\n                                                type='text' \n                                                name='email'\n                                                onChange={e => setEmail(e.target.value.toLowerCase())}\n                                                onFocus={e => setClosestDivsActive(e)}\n                                                onBlur={e => setClosestDivsInactive(e)}\n                                            />\n                                        </label>\n                                    </span>\n                                    <div className='email-errors'>{errors?.filter(e=>e.toLowerCase().includes('email'))}</div>\n                                </div>\n\n                                <br />\n\n                                <div className={errors.length ? `error-div auth-input-box` :`auth-input-box`}>\n                                    <div className={errors.length ? 'error-text signup-signin-field-title' : 'signup-signin-field-title'}>\n                                        Password\n                                    </div>\n\n                                    <br />\n\n                                    <span >\n                                        <label>\n                                            <input className='signup-signin-field-input'\n                                                type='password' \n                                                name='password'\n                                                onChange={e => setPassword(e.target.value)}\n                                                onFocus={e => setClosestDivsActive(e)}\n                                                onBlur={e => setClosestDivsInactive(e)}\n                                            />\n                                        </label>\n                                    </span>\n                                    <div className='password-errors'>{errors?.filter(e=>e.toLowerCase().includes('password'))}</div>\n                                </div>\n\n                                <br />\n\n                                <br />\n\n                                <button className='auth-button' id='signup-button' onClick={handleSubmit}>\n                                    Sign up\n                                </button>\n                            </form>\n                            <div className='signup-signin-switch'>\n                                <Link to='/signin'>Log in</Link>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <section className='split split-right' id='auth-side-photo'>\n                    <div className='auth-centered login-image'/>\n                </section>\n            </main>\n        </>\n    )\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/OrganizerEventIndex.js",["147","148","149"],[],"import { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport moment from 'moment-timezone';\nimport { useEffect } from \"react\";\n\nimport NavBarLoggedIn from \"../NavBar/NavBarLoggedIn\";\nimport * as sessionActions from '../../store/sessionReducer'\nimport * as userActions from '../../store/usersReducer'\nimport * as eventActions from '../../store/eventsReducer'\nimport \"./OrganizerEventIndex.css\"\n\nexport default function OrganizerEventIndex () {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const currentUserId = useSelector(sessionActions.getCurrentUser)?.id\n    const currentUser = useSelector(userActions.getUser(currentUserId))\n    const organizerEventIds = currentUser ?.organizedEvents\n    const allEvents = Array.from(useSelector(eventActions.getEvents))\n    const currentUserOrganizedEvents = organizerEventIds ? allEvents.filter(el => organizerEventIds.includes(el.id)) : null\n    const sortedEvents = currentUserOrganizedEvents?.sort((a,b) => moment(b.timestampStart).isAfter((a.timestampStart)) ? -1 : 1)\n    \n    const gridHeaderText=['Event','','','Sold','Gross','']\n    const gridHeaderClasses=['event','photo','info-description','sold','gross','edit-delete']\n\n    useEffect(() =>{\n        let getData = setTimeout(() => {\n            dispatch(userActions.fetchUserEvents(currentUserId));\n          }, 0)\n        return () => clearTimeout(getData)\n    }, [])\n\n    const focusInput = (e) => {\n        //whichever div is clicked, find its input and focus it \n\n        if (e.target.className === 'organizer-index-search-box' || e.target.className === 'organizer-index-search-create') {\n            let input = e.target.querySelector('.organizer-index-search-input')\n            input.focus()\n        } else if (e.target.className === 'organizer-index-search-input') {\n            e.target.focus()\n        }\n    }\n\n    function setClosestDivsActive(e){\n            let outerDiv = e.target.closest('div')\n            outerDiv.classList.add('active-div')\n    }\n\n    function setClosestDivsInactive(e) {\n        //remove 'focus' class from both surrounding divs of the input\n        //that was blurred\n        let outerDiv = e.target.closest('div')\n        outerDiv.classList.remove('active-div')\n    }\n\n    const toggleHide = e => {\n        document.querySelectorAll('.edit-delete-dropdown-content').forEach(el=>el.classList.add('hidden'))\n        \n        if (['svg', 'path'].includes(e.target.nodeName.toLowerCase())) {\n            let row = e.target.closest('.organizer-index-table-row > div')?.classList.value.split(' ').filter(e =>e.includes('row'))\n            let box = document.querySelector(`.edit-delete-dropdown-content.${row}`)\n            box.classList.toggle('hidden')\n        }\n    }\n\n    const handleDeleteEvent = (eventId) =>{\n        return dispatch(eventActions.deleteEvent(eventId))\n    }\n\n    return(\n        <>\n        <main id='organizer-index-main' onClick={(e)=>toggleHide(e)}>\n        <NavBarLoggedIn />\n        <section className='organizer-index-centered' >\n            <h1 className='organizer-index-h1'>Events</h1>\n            \n            <div className='organizer-index-search-create'> \n                <div className='organizer-index-search-box' onClick={(e)=>focusInput(e)}>\n                    <div id='organizer-index-search-button'>\n                        <svg id=\"organizer-index-magnifying-glass\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"magnifying-glass-chunky_svg__eds-icon--magnifying-glass-chunky_base\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10 14c2.2 0 4-1.8 4-4s-1.8-4-4-4-4 1.8-4 4 1.8 4 4 4zm3.5.9c-1 .7-2.2 1.1-3.5 1.1-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6c0 1.3-.4 2.5-1.1 3.4l5.1 5.1-1.5 1.5-5-5.1z\"></path></svg>\n                    </div>\n                    <input className='organizer-index-search-input' placeholder='Find your dark event' onFocus={(e)=>setClosestDivsActive(e)} onBlur={(e)=>setClosestDivsInactive(e)}/>\n                </div>\n                <div className='organizer-index-create-button' onClick={()=>history.push('/events/create')}>\n                    Create Event\n                </div>\n            </div>\n\n            <div className='organizer-index-table' >\n                <div className='organizer-index-table-headers'>\n                    {gridHeaderText.map((e,i) =>{\n                        return(\n                            <div className={`column-${i+1} row-1 header-${gridHeaderClasses[i]}`}>{e ? e : ''}</div>\n                        )\n                    })}\n                </div>\n                {sortedEvents?.map((e,i) =>{\n                    return(\n                <div className={`organizer-index-table-row`} key={i}>\n                    <Link to={`/events/${e.id}`}>\n                    <div className={`column-1 row-${i+2}`}>\n                        <div className='event-grid-date-month'>{moment(e.timestampStart).format('MMM')}</div>\n                        <div className='event-grid-date-day'>{moment(e.timestampStart).format('D')}</div>\n                    </div>\n\n                    <div className={`column-2 row-${i+2}`}>\n                        <div className='event-grid-photo'><img src={e.imgUrl}/></div>\n                    </div>\n\n                    <div className={`column-3 row-${i+2}`}>\n                        <div className='event-grid-title'>{e.title}</div>\n                        <div className='event-grid-venue'>{e.venueName}</div>\n                        <div className='event-grid-date-detailed'>{`${moment(e.timestampStart).format('dddd, MMMM D, YYYY')} at ${moment(e.timestampStart).format('h:MM A')}`}</div>\n                    </div>\n\n                    <div className={`column-4 row-${i+2}`}>\n                        <div className='event-sold'>{`${e.ticketsSold ? e.ticketsSold : 0} / ${e.capacity}`}</div>\n                    </div>\n\n                    <div className={`column-5 row-${i+2}`}>\n                        <div className='event-gross'>{`$${(e.price * e.ticketsSold ? e.ticketsSold : 0).toFixed(2)}`}</div>\n                    </div>\n                    </Link>\n\n                    <div className={`column-6 row-${i+2}`}>\n                        <div className='edit-delete-dropdown'>\n                            <svg id=\"vertical-dots-chunky\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"vertical-dots-chunky_svg__eds-icon--vertical-dots-chunky_dot_2\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10 18c0-1.1.9-2 2-2s2 .9 2 2-.9 2-2 2-2-.9-2-2z\"></path><circle id=\"vertical-dots-chunky_svg__eds-icon--vertical-dots-chunky_dot\" fillRule=\"evenodd\" clipRule=\"evenodd\" cx=\"12\" cy=\"12\" r=\"2\"></circle><circle id=\"vertical-dots-chunky_svg__eds-icon--vertical-dots-chunky_dot_1\" fillRule=\"evenodd\" clipRule=\"evenodd\" cx=\"12\" cy=\"6\" r=\"2\"></circle></svg>\n                        </div>\n                    </div>\n\n                    <div className={`edit-delete-dropdown-content column-6 row-${i+2} hidden`}>\n                        <Link to={`/events/${e.id}`}><div className='edit-dropdown-content-text-box'>View</div></Link>\n                        <Link to={`/events/${e.id}/edit`}><div className='edit-dropdown-content-text-box'>Edit</div></Link>\n                        <div className='edit-dropdown-content-text-box' onClick={()=>handleDeleteEvent(e.id)}>Delete</div>\n                    </div>\n                </div>\n                    )\n                })}\n                \n            </div>\n        </section>\n        </main>\n        </>\n    )\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/EditEvent.js",["150","151"],[],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Calendar from 'react-calendar';\nimport moment from 'moment-timezone';\nimport { useHistory, Link, useParams } from 'react-router-dom';\nimport * as eventActions from \"../../store/eventsReducer\";\nimport * as sessionActions from '../../store/sessionReducer';\nimport * as userActions from '../../store/usersReducer';\nimport NavBarLoggedIn from \"../NavBar/NavBarLoggedIn\";\nimport './CreateEvent.css';\n\nexport default function CreateEvent () {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const {eventId} = useParams();\n    const [prevEvent,setPrevEvent] = useState({})\n    const currentUser = useSelector(sessionActions.getCurrentUser)\n\n    useEffect(() =>{\n        const awaitFetchBeforeLoading = async () => {\n            const res = await dispatch(userActions.fetchUserEvents(currentUser?.id));\n            setPrevEvent(res.events[eventId])\n        }\n        awaitFetchBeforeLoading()   \n    }, [])\n\n    useEffect(()=>{\n        setTitle(prevEvent.title);\n        setOrganizerName(prevEvent.organizerName);\n        setEventType(prevEvent.eventType);\n        setEventCategory(prevEvent.eventCategory);\n        setAddress(prevEvent.address);\n        setVenueName(prevEvent.venueName);\n        setEventStartDate(moment(prevEvent.timestampStart).format('YYYY-MM-DD'))\n        setEventStartTime(moment(prevEvent.timestampStart).format('h:mm A'))\n        setEventEndDate(moment(prevEvent.timestampEnd).format('YYYY-MM-DD'))\n        setEventEndTime(moment(prevEvent.timestampEnd).format('h:mm A'))\n        setCapacity(prevEvent.capacity);\n        setPrice(prevEvent.price);\n        setDescription(prevEvent.description);\n    }, [prevEvent])\n\n    const [title, setTitle] = useState('')\n    const [organizerName, setOrganizerName] = useState('')\n    const [eventType, setEventType] = useState('')\n    const [eventCategory, setEventCategory] = useState('')\n    const [venueName, setVenueName] = useState('')\n    const [address, setAddress] = useState('')\n    const [eventStartDate, setEventStartDate] = useState(moment(moment(prevEvent?.timestampStart).tz(\"America/New_York\")).format('MM/DD/YYYY'))\n    const [eventStartTime, setEventStartTime] = useState(moment(moment(prevEvent?.timestampStart).tz(\"America/New_York\")).format('h:mm A'))\n    const [eventEndDate, setEventEndDate] = useState(moment(moment(prevEvent?.timestampEnd).tz(\"America/New_York\")).format('MM/DD/YYYY'))\n    const [eventEndTime, setEventEndTime] = useState(moment(moment(prevEvent?.timestampEnd).tz(\"America/New_York\")).format('h:mm A'))\n    const [capacity, setCapacity] = useState('')\n    const [errors, setErrors] = useState([]);\n    const [price, setPrice] = useState('');\n    const [description, setDescription] = useState('');\n    const [startCalActive, setStartCalActive] = useState('');\n    const [endCalActive, setEndCalActive] = useState('');\n    \n    const eventTypes = [\n        {value: null, display: 'Type'},\n        {value: 'attraction', display: 'Attraction'},\n        {value: 'camp_trip_retreat', display: 'Camp/Trip/Retreat'},\n        {value: 'concert_performance', display: 'Concert/Performance'},\n        {value: 'conference', display: \"Conference\"},\n        {value: 'convention', display: 'Convention'},\n        {value: 'dinner_gala', display: 'Dinner/Gala'},\n        {value: 'festival_fair', display: 'Festival/Fair'},\n        {value: 'party_social_gathering', display: 'Party/Social Gathering'},\n        {value: 'type_other', display: \"Other\"}\n    ]\n\n    const eventCategories = [\n        {value: null, display: 'Category'},\n        {value: 'community_culture', display: 'Community/Culture'},\n        {value: 'fashion_beauty', display: 'Fashion/Beauty'},\n        {value: 'film_media_entertainment', display: 'Film/Media/Entertainment'},\n        {value: 'food_drink', display: 'Food/Drink'},\n        {value: 'music', display: 'Music'},\n        {value: 'category_other', display: 'Other'},\n        {value: 'travel_outdoor', display: 'Travel/Outdoor'}\n    ]\n\n    const setVenueAndAddress = (e) =>{\n        setVenueName(e.target.value)\n        setAddress(e.target.value)\n    }\n    const focusInput = (e) => {\n        //blur anything that's currently focused\n        Array.from(document.querySelectorAll('.create-event-field-input'))\n            .forEach(el => {\n                el.blur()\n            })\n        \n        //whichever div is clicked, find its input and focus it\n        if (e.target.className === 'create-event-field-box') {\n            let input = e.target.querySelector('.create-event-field-input')\n            input.focus()\n        } else if (e.target.className === 'create-event-field-text') {\n\n            let outerDiv = e.target.parentNode\n            let input = outerDiv.querySelector('.create-event-field-input')\n            input.focus()\n\n        } else if (e.target.className === 'create-event-field-input') {\n            e.target.focus()\n        }\n    }\n\n    function setClosestDivsActive(e){\n        //add 'focus' class to both surrounding divs of the input\n        //that was focused\n        if (Array.from(document.querySelector('.event-start-date-button').querySelectorAll('*')).includes(e.target)\n            || Array.from(document.querySelector('.event-end-date-button').querySelectorAll('*')).includes(e.target)\n            ) {\n            return;\n        }\n\n        if (e.target.closest('div').classList.contains('create-event-field-text')) {\n            let outerDiv = e.target.closest('div').parentNode\n            outerDiv.classList.add('active-div')\n\n            let textFieldTitle = outerDiv.querySelector('.create-event-field-text')\n            textFieldTitle.classList.add('active-field')\n        } else if (e.target.closest('div').classList.contains('create-event-field-box')) {\n            let outerDiv = e.target.closest('div')\n            outerDiv.classList.add('active-div')\n\n            let textFieldTitle = outerDiv.querySelector('.create-event-field-text')\n            textFieldTitle?.classList.add('active-field')\n        }\n\n    }\n\n    function setClosestDivsInactive(e) {\n        //remove 'focus' class from both surrounding divs of the input\n        //that was blurred\n        let outerDiv = e.target.closest('div')\n        outerDiv.classList.remove('active-div')\n        let textFieldTitle = Array.from(outerDiv.childNodes)[0]\n        textFieldTitle.classList.remove('active-field')\n    }\n\n    const toggleCalendar = (e) =>{\n        e.preventDefault();\n\n        if ((e.target === document.querySelector('.event-start-date-button') || Array.from(document.querySelector('.event-start-date-button').querySelectorAll('*')).includes(e.target))\n            && !(e.target.classList.contains(\"event-date-value\") \n            || e.target.classList.contains('react-calendar__tile')\n            || e.target.parentNode.classList.contains('react-calendar__tile'))) {\n            setStartCalActive(true)\n        } else if ((e.target === document.querySelector('.event-end-date-button') || Array.from(document.querySelector('.event-end-date-button').querySelectorAll('*')).includes(e.target))\n            && !(e.target.classList.contains(\"event-date-value\") \n            || e.target.classList.contains('react-calendar__tile')\n            || e.target.parentNode.classList.contains('react-calendar__tile'))) {\n            setEndCalActive(true)\n        } else {\n            setStartCalActive(false)\n            setEndCalActive(false)\n        }\n    }\n\n    const handleEdit = () => {\n        let event = {\n            eventId: prevEvent.id,\n            title,\n            organizerName,\n            eventType,\n            eventCategory,\n            venueName,\n            address,\n            timestampStart: moment(`${eventStartDate.toString().slice(0,15)} ${eventStartTime}`).tz('America/New_York').format(),\n            timestampEnd: moment(`${eventEndDate.toString().slice(0,15)} ${eventEndTime}`).tz('America/New_York').format(),\n            capacity,\n            price,\n            description,\n            organizerId: currentUser.id\n        }\n\n        setErrors([])\n        return dispatch(eventActions.updateEvent(event))\n            // .catch(async (res) => {\n            //     let data;\n            //     try {\n            //         data = await res.clone().json();\n            //     } catch {\n            //         data = await res.text();\n            //     }\n            //     if (data?.errors) setErrors(data.errors);\n            //     else if (data) setErrors([data]);\n            //     else setErrors([res.statusText]);\n            // })\n            .then(() =>{history.push(`/organizer/events`)});\n    };\n\n    return (\n        <>\n            {currentUser ? <NavBarLoggedIn /> : <></>}\n            <br /><br />\n            \n            <br />\n            <div id='back-to-organized-events'>\n                <Link to='/organizer/events'><span><svg id=\"chevron-left-chunky_svg__eds-icon--chevron-left-chunky_svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\" ><path id=\"chevron-left-chunky_svg__eds-icon--chevron-left-chunky_base\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.8 7l-5 5 5 5 1.4-1.4-3.6-3.6 3.6-3.6z\"></path></svg>\n                Events</span></Link>\n            </div>\n\n            <br /><br/><br/>\n            <form className='centered-create-event' onClick={(e) =>{toggleCalendar(e); focusInput(e)}}>\n                <section id='basic-info'>\n                    <div id='basic-info-description-box'>\n                        <svg id=\"title-edit-svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"title-edit_svg__eds-icon--title-edit_base\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M2 2v3h1V3h5v10H6v1h5v-1H9V3h5v2h1V2H2z\"></path><g id=\"title-edit_svg__eds-icon--title-edit_lines\" fillRule=\"evenodd\" clip-rule=\"evenodd\"><path d=\"M15 9h7v1h-7zM15 13h7v1h-7zM6 17h16v1H6zM6 21h16v1H6z\"></path></g></svg>\n                        <h2 id='basic-info-h2'>Basic Info</h2>\n                        <div id='basic-info-p-container'>\n                            <p>\n                                Name your event and tell event-goers why they should come. Add details that highlight what makes it unique.\n                            </p>\n                        </div>\n                    </div>\n\n                    <div className='create-event-field-box'>\n                        <div className='create-event-field-text'>\n                            Event Title <text style={{ color: 'red' }}>*</text>\n                        </div>\n\n                        <br />\n\n                        <span className='create-event-field-input-box'>\n                            <label>\n                                <input className='create-event-field-input'\n                                    type='text' \n                                    name='title'\n                                    value={title}\n                                    placeholder=\"Be deceptive and misleading. Don't arouse suspicion.\"\n                                    onChange={e => setTitle(e.target.value)}\n                                    onFocus={e => setClosestDivsActive(e)}\n                                    onBlur={e => setClosestDivsInactive(e)}\n                                />\n                            </label>\n                        </span>\n                    </div>\n                    \n                    <div className='create-event-field-box'>\n                        <div className='create-event-field-text'>\n                            Organizer\n                        </div>\n\n                        <br />\n\n                        <span className='create-event-field-input-box'>\n                            <label>\n                                <input className='create-event-field-input'\n                                    type='text' \n                                    name='title'\n                                    placeholder=\"Fake names are fine. Avoid giving out details that could help slayers track us.\"\n                                    value={organizerName}\n                                    onChange={e => setOrganizerName(e.target.value)}\n                                    onFocus={e => setClosestDivsActive(e)}\n                                    onBlur={e => setClosestDivsInactive(e)}\n                                />\n                            </label>\n                        </span>\n                    </div>\n                    <div className='event-type-container'>\n                        <select name='event-type' id=\"event-type-dropdown\" onChange={(e) =>{setEventType(e.target.value)}} defaultValue={eventType}>\n                            {eventTypes.map(type =>{\n                                return (\n                                    <option key={type.value} value={type.value} selected={type.value === prevEvent.eventType ? true : ''}> \n                                        {type.display}\n                                    </option>\n                                )\n                            })}\n                        </select>\n                    </div>\n                    <br/>\n                    <div className='event-category-container'>\n                        <select name='event-category' id=\"event-category-dropdown\" onChange={(e) =>{setEventCategory(e.target.value)}} defaultValue={eventCategories[0]}>\n                            {eventCategories.map(cat =>{\n                                return (\n                                    <option key={cat.value} value={cat.value} selected={cat.value === prevEvent.eventCategory ? true : ''}> \n                                        {cat.display}\n                                    </option>\n                                )\n                            })}\n                        </select>\n                    </div>\n                </section>\n\n                <hr className='create-event-section-division-hr' id='basic-info-location-division-hr'/>\n\n                <section id='Location-box'>\n                    <div className='location-description-box'>\n                        <svg id=\"map_svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path fillRule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 3c-1.1 0-2 .9-2 2H2v16h17.8c1.1 0 2.1-.9 2.1-2V5c.1-1.1-.8-2-1.9-2zm-.2 17H3V6h15v13h1c0-.6.4-1 1-1 .5 0 .9.4 1 .9-.1.6-.6 1.1-1.2 1.1zm1.2-2.7c-.3-.2-.6-.3-1-.3s-.7.1-1 .3V5c0-.6.4-1 1-1s1 .4 1 1v12.3z\"></path><path id=\"map_svg__eds-icon--map_cross\" fillRule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.8 12.7l.7-.7-1.1-1 1.1-1-.7-.7-1.1 1-1-1-.7.7 1 1-1 1 .7.7 1-1z\"></path><path id=\"map_svg__eds-icon--map_dash_3_\" fillRule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 10h2v1h-2z\"></path><path id=\"map_svg__eds-icon--map_dash_2_\" fillRule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15 12h1v2h-1z\"></path><path id=\"map_svg__eds-icon--map_dash_1_\" fillRule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 15h2v1h-2z\"></path><path id=\"map_svg__eds-icon--map_dash\" fillRule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 15h2v1H8z\"></path></svg>\n                        <h2 id='location-h2'>Location</h2>\n                        <div id='location-p-container'>\n                            <p>\n                                Pick a prime spot to amass the largest number of fools you can. The more the bloodier!\n                            </p>\n                        </div>\n                    </div>\n                    <div className='create-event-field-box' id='create-event-venue-box'>\n                        <span className='create-event-field-input-box' id='create-event-venue-input-box'>\n                            <label>\n                                <input className='create-event-field-input'\n                                    id='create-event-venue-input'\n                                    type='text' \n                                    name='venue-name'\n                                    placeholder=\"Open air venues are best - no invitation inside needed. Make sure to check the weather forecast.\"\n                                    value={venueName}\n                                    onChange={e => setVenueAndAddress(e)}\n                                    onFocus={e => setClosestDivsActive(e)}\n                                    onBlur={e => setClosestDivsInactive(e)}\n                                />\n                                <div className='create-edit-page-magnifying-glass'><svg id=\"magnifying-glass-venue\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"magnifying-glass-chunky_svg__eds-icon--magnifying-glass-chunky_base\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10 14c2.2 0 4-1.8 4-4s-1.8-4-4-4-4 1.8-4 4 1.8 4 4 4zm3.5.9c-1 .7-2.2 1.1-3.5 1.1-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6c0 1.3-.4 2.5-1.1 3.4l5.1 5.1-1.5 1.5-5-5.1z\"></path></svg></div>\n                            </label>\n                        </span>\n                    </div>\n                </section>\n\n                <hr className='create-event-section-division-hr' id='location-date-division-hr'/>\n                \n                <section id='date-and-time'>\n                    <div className='datetime-description-box'>\n                        <svg id=\"calendar_svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"calendar_svg__eds-icon--calendar_base\" fillRule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17 4V2h-1v2H8V2H7v2H2v18h20V4h-5zm4 17H3V9h18v12zM3 8V5h4v1h1V5h8v1h1V5h4v3H3z\"></path><g id=\"calendar_svg__eds-icon--calendar_squares\" fillRule=\"evenodd\" clip-rule=\"evenodd\"><path d=\"M15 16h2v2h-2zM11 16h2v2h-2zM7 16h2v2H7zM15 12h2v2h-2zM11 12h2v2h-2zM7 12h2v2H7z\"></path></g></svg>\n                        <h2 id='location-h2'>Date and time</h2>\n                        <div id='location-p-container'>\n                            <p>\n                                Choose a day and time to gather your unsuspecting victims together. Nighttime is usually best, unless you're indoors of course.\n                            </p>\n                        </div>\n                    </div>\n                    \n                    <div className='event-start-box'>\n                        <div className='event-start-date-button timestamp-button'>\n                        <div className='create-edit-page-small-calendar'><svg id=\"small_calendar_svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"calendar-chunky_svg__eds-icon--calendar-chunky_base\" d=\"M16.9 6.5v-2h-2v2h-6v-2h-2v2h-2v13h14v-13h-2zm0 11h-10v-7h10v7z\"></path></svg></div>\n                            <div className='event-date-text event-date-text' id='event-start-date-text'>Event Starts</div>\n                            <div className='event-date-value event-date-value' id='event-start-date-value'>{`${moment(eventStartDate).format('MM/DD/YYYY')}`}</div>\n                            <div className='calendar-box' id='event-start-date-box'>\n                                <Calendar className={`calendar-timestamp-start calendar ${startCalActive ? '' : 'hidden'}`} onChange={setEventStartDate} defaultValue={eventStartDate} />\n                            </div>\n                            <br/>\n                        </div>\n\n                        <div className='event-start-time-button timestamp-button' onClick={(e) =>{\n                                    document.querySelector('.event-start-times-dropdown').classList.toggle('hidden');\n                                    document.querySelector('.event-start-times-dropdown').setAttribute('size', 12)}}>\n                            <div className='event-time-text' id='event-start-time-text'>Start Time</div>\n                            <div className='event-time-value' id='event-start-time-value'>{eventStartTime}</div>\n                            <label>\n                                    <select className='event-start-times-dropdown hidden' name='event-start-times' id=\"event-start-times\" onChange={(e) =>{setEventStartTime(e.target.value)}} defaultValue={eventStartTime}>\n                                        {[...Array(48).keys()].map(i =>{\n                                            let time = moment(eventStartDate).startOf('day').add(30*i,'minutes').format('hh:mm A')\n                                            return (\n                                                <option key={i} value={time} > \n                                                    {`${moment(eventStartDate).startOf('day').add(30*i,'minutes').format('hh:mm A')}`}\n                                                </option>\n                                            )\n                                        })}\n                                    </select>\n                            </label>\n                        </div>        \n                    </div>\n\n                    <div className='event-end-container'>\n                        <div className='event-end-date-button timestamp-button'\n                            /*onClick={e => setClosestDivsActive(e)}*/\n                            >\n                            <div className='create-edit-page-small-calendar'><svg id=\"small_calendar_svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"calendar-chunky_svg__eds-icon--calendar-chunky_base\" d=\"M16.9 6.5v-2h-2v2h-6v-2h-2v2h-2v13h14v-13h-2zm0 11h-10v-7h10v7z\"></path></svg></div>\n                            <div className='event-date-text' id='event-end-date-text'>Event Ends</div>\n                            <div className='event-date-value' id='event-end-date-value'>{`${moment(eventEndDate).format('MM/DD/YYYY')}`}</div>\n                            <div className='calendar-box' id='event-end-date-box'>\n                                <Calendar className={`calendar-timestamp-end calendar ${endCalActive ? '' : 'hidden'}`} onChange={setEventEndDate} defaultValue={eventEndDate} />\n                            </div>\n                            <br/>\n                        </div>\n                        \n                        <div className='event-end-time-button timestamp-button' onClick={(e) =>{\n                                    document.querySelector('.event-end-times-dropdown').classList.toggle('hidden');\n                                    document.querySelector('.event-end-times-dropdown').setAttribute('size', 12)}}>\n                            <div className='event-time-text' id='event-end-time-text'>Start Time</div>\n                            <div className='event-time-value' id='event-end-time-value'>{eventEndTime}</div>\n                            <label>\n                                    <select className='event-end-times-dropdown hidden' name='event-end-times' id=\"event-end-times\" onChange={(e) =>{setEventEndTime(e.target.value)}} defaultValue={eventEndTime}>\n                                        {[...Array(48).keys()].map(i =>{\n                                            let time = moment(eventEndDate).startOf('day').add(30*i,'minutes').format('hh:mm A')\n                                            return (\n                                                <option key={i} value={time} > \n                                                    {`${moment(eventEndDate).startOf('day').add(30*i,'minutes').format('hh:mm A')}`}\n                                                </option>\n                                            )\n                                        })}\n                                    </select>\n                            </label>\n                            <br/>\n                        </div>\n                    </div>\n                </section>\n                <br/><br/><br/>\n                <hr className='create-event-section-division-hr' id='date-misc-division-hr'/>\n\n                <section id='misc-description'>\n                    <div className='misc-description-box'>\n                        <svg id=\"map_svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path fillRule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 3c-1.1 0-2 .9-2 2H2v16h17.8c1.1 0 2.1-.9 2.1-2V5c.1-1.1-.8-2-1.9-2zm-.2 17H3V6h15v13h1c0-.6.4-1 1-1 .5 0 .9.4 1 .9-.1.6-.6 1.1-1.2 1.1zm1.2-2.7c-.3-.2-.6-.3-1-.3s-.7.1-1 .3V5c0-.6.4-1 1-1s1 .4 1 1v12.3z\"></path><path id=\"map_svg__eds-icon--map_cross\" fillRule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.8 12.7l.7-.7-1.1-1 1.1-1-.7-.7-1.1 1-1-1-.7.7 1 1-1 1 .7.7 1-1z\"></path><path id=\"map_svg__eds-icon--map_dash_3_\" fillRule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 10h2v1h-2z\"></path><path id=\"map_svg__eds-icon--map_dash_2_\" fillRule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15 12h1v2h-1z\"></path><path id=\"map_svg__eds-icon--map_dash_1_\" fillRule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 15h2v1h-2z\"></path><path id=\"map_svg__eds-icon--map_dash\" fillRule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 15h2v1H8z\"></path></svg>\n                        <h2 id='location-h2'>Miscellaneous details</h2>\n                        <div id='location-p-container'>\n                            <p>\n                                Fill in your event with even more misleading details!\n                            </p>\n                        </div>\n                    </div>\n                    <br/><br/>\n                    <div className='create-event-field-box' id='create-event-capacity-box' onClick={(e) =>{focusInput(e)}}>\n                        <div className='create-event-field-text' id='event-capacity-text'>Capacity</div>\n                        <span className='create-event-field-input-box' id='create-event-capacity-input-box'>\n                            <label>\n                                <input className='create-event-field-input'\n                                    id='create-event-capacity-input'\n                                    type='text' \n                                    placeholder=\"How many victims do you plan to invite? Be ambitious!\"\n                                    value={capacity}\n                                    onChange={e => {setCapacity(e.target.value)}}\n                                    onFocus={e => setClosestDivsActive(e)}\n                                    onBlur={e => setClosestDivsInactive(e)}\n                                />\n                            </label>\n                        </span>\n                    </div>\n                    <div className='create-event-field-box' id='create-event-price-box' onClick={(e) =>{focusInput(e)}}>\n                        <div className='create-event-field-text' id='event-price-text'><p>Price<br/>$</p></div>\n                        <span className='create-event-field-input-box' id='create-event-price-input-box'>\n                            <label>\n                                <input className='create-event-field-input'\n                                    id='create-event-price-input'\n                                    type='text' \n                                    placeholder=\"Why not charge people while you feast on them? Kill two bats with one stone.\"\n                                    value={price}\n                                    onChange={e => {setPrice(e.target.value)}}\n                                    onFocus={e => setClosestDivsActive(e)}\n                                    onBlur={e => setClosestDivsInactive(e)}\n                                />\n                            </label>\n                        </span>\n                    </div>\n                    <div className='create-event-field-box' id='create-event-description-box' onClick={(e) =>{focusInput(e)}}>\n                        <div className='create-event-field-text' id='event-description-text'>Description</div>\n                        <span className='create-event-field-input-box' id='create-event-description-input-box'>\n                            <textarea className='create-event-field-input'\n                                id='create-event-description-input'\n                                placeholder=\"Give a fake event description to entice the humans to attend. Be descriptive. Be misleading. Humans are gullible.\"\n                                value={description}\n                                onChange={e => {setDescription(e.target.value)}}\n                                onFocus={e => setClosestDivsActive(e)}\n                                onBlur={e => setClosestDivsInactive(e)}\n                            />\n                        </span>\n                    </div>\n                </section>\n\n                <div className='whitespace' />\n            </form>\n        <div className='create-event-button-box'>\n            <hr id='create-event-bottom-fullscreen-hr' />\n            <button className='create-event-discard-button' onClick={()=>history.goBack()}>Discard</button>\n            <button className='create-event-button' onClick={handleEdit}>Save Changes</button>\n        </div>\n        </>\n    )\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/AllEvents.js",["152"],[],"import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom/\";\nimport * as eventActions from '../../store/eventsReducer'\nimport NavBarLoggedIn from \"../NavBar/NavBarLoggedIn\";\nimport './AllEvents.css'\n\nexport default function AllEvents () {\n    \n    const dispatch = useDispatch();\n    \n    useEffect(() =>{\n        let getData = setTimeout(() => {\n            dispatch(eventActions.fetchEvents());\n          }, 0)\n        return () => clearTimeout(getData)\n    }, [])\n\n    const allEvents = useSelector(eventActions.getEvents)\n    return (\n        <>\n            <NavBarLoggedIn></NavBarLoggedIn>\n            <br/><br/>\n            <ul className='events-index'>\n            {allEvents.map(event => {\n                return (<>\n                    <Link to={`events/${event.id}`}><b>{event.title}:</b></Link>\n                    <li>Organizer: {event.organizerName}</li>\n                    <li>Location: {event.venueName}</li>\n                    <li>Date/Time: {event.timestampStart} - {event.timestampEnd}</li>\n                    <li>Type: {event.eventType}</li>\n                    <li>Category: {event.eventCategory}</li>\n                    <li>{event.capacity - event.ticketsSold} tickets remaining</li>\n                    <li>Price: {event.price}</li>\n                    <li>Description: {event.description}</li>\n                </>)\n            })}\n            </ul>\n        </>\n    )\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/SplashPage.js",["153","154"],[],"import NavBarLoggedIn from \"../NavBar/NavBarLoggedIn\";\nimport NavBarLoggedOut from \"../NavBar/NavBarLoggedOut\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport moment from 'moment-timezone';\nimport { useEffect } from 'react';\nimport * as sessionActions from '../../store/sessionReducer.js';\nimport * as eventActions from'../../store/eventsReducer';\nimport * as userActions from '../../store/usersReducer';\nimport './SplashPage.css';\n\n\nexport default function SplashPage () {\n    const dispatch = useDispatch();\n    const history = useHistory()\n    const currentUserId = useSelector(sessionActions.getCurrentUser)?.id\n    const currentUser = useSelector(userActions.getUser(currentUserId))\n    const allEvents = useSelector(eventActions.getEvents)\n\n    debugger;\n    useEffect(() =>{\n        let getData = setTimeout(() => {\n            if (currentUserId) dispatch(userActions.fetchUserEvents(currentUserId));\n            dispatch(eventActions.fetchEvents())\n          }, 0)\n        return () => clearTimeout(getData)\n    }, [])\n\n    const heartIcon = (ev) => {\n        if ((currentUser && !currentUser.likedEvents.includes(ev.id)) || !currentUser) {\n            return (<div className='splash-empty-heart'><svg id='fa-heart-empty' xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\"> {/*<!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->*/}<path d=\"M225.8 468.2l-2.5-2.3L48.1 303.2C17.4 274.7 0 234.7 0 192.8v-3.3c0-70.4 50-130.8 119.2-144C158.6 37.9 198.9 47 231 69.6c9 6.4 17.4 13.8 25 22.3c4.2-4.8 8.7-9.2 13.5-13.3c3.7-3.2 7.5-6.2 11.5-9c0 0 0 0 0 0C313.1 47 353.4 37.9 392.8 45.4C462 58.6 512 119.1 512 189.5v3.3c0 41.9-17.4 81.9-48.1 110.4L288.7 465.9l-2.5 2.3c-8.2 7.6-19 11.9-30.2 11.9s-22-4.2-30.2-11.9zM239.1 145c-.4-.3-.7-.7-1-1.1l-17.8-20c0 0-.1-.1-.1-.1c0 0 0 0 0 0c-23.1-25.9-58-37.7-92-31.2C81.6 101.5 48 142.1 48 189.5v3.3c0 28.5 11.9 55.8 32.8 75.2L256 430.7 431.2 268c20.9-19.4 32.8-46.7 32.8-75.2v-3.3c0-47.3-33.6-88-80.1-96.9c-34-6.5-69 5.4-92 31.2c0 0 0 0-.1 .1s0 0-.1 .1l-17.8 20c-.3 .4-.7 .7-1 1.1c-4.5 4.5-10.6 7-16.9 7s-12.4-2.5-16.9-7z\"/></svg></div>)\n        } else return (<div className='splash-filled-heart'><svg id='fa-heart-filled' xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\">{/*<!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->*/}<path d=\"M47.6 300.4L228.3 469.1c7.5 7 17.4 10.9 27.7 10.9s20.2-3.9 27.7-10.9L464.4 300.4c30.4-28.3 47.6-68 47.6-109.5v-5.8c0-69.9-50.5-129.5-119.4-141C347 36.5 300.6 51.4 268 84L256 96 244 84c-32.6-32.6-79-47.5-124.6-39.9C50.5 55.6 0 115.2 0 185.1v5.8c0 41.5 17.2 81.2 47.6 109.5z\"/></svg></div>)\n    }\n\n    const heartReact = (e,ev) =>{ \n        e.stopPropagation();\n        e.preventDefault();\n        if (!currentUser) history.push('/signin')\n        \n        if (currentUser.likedEvents) {\n            if (currentUser.likedEvents.includes(ev.id)) {\n                const index = currentUser.likedEvents.indexOf(ev.id)\n                currentUser.likedEvents.splice(index,1)\n            } else currentUser.likedEvents.push(ev.id)\n        }\n        else currentUser['likedEvents'] = [ev.id]\n          \n        dispatch(userActions.updateUser(currentUser)) \n    }\n\n    if (!allEvents) {\n        return <></>\n    } else return(\n        <>\n        <main id='splash-main'>\n        {currentUser ? <NavBarLoggedIn /> : <NavBarLoggedOut previouslocation={sessionStorage.getItem('previousLocation')} />}\n        <div className='splash-banner'>\n            <Link to='/search'>\n                <button id='event-search-button'>\n                    Find your next event\n                </button>\n            </Link>\n        </div>\n\n        <div id='splash-events-container'>\n            {/* <div id='splash-events-filter'>\n                Filter - All For You etc\n            </div> */}\n            <div className='splash-events-topic'>\n                <div className='splash-events-topic-title'>\n                    <svg id='splash-ticket-svg' viewBox=\"0 0 24 24\"><path d=\"M10 13v-2h4v2zm6 5V6h-.4C15 7.4 13.8 8.4 12 8.4S9 7.4 8.4 6H8v12h.4c.6-1.4 1.8-2.4 3.6-2.4s3 1 3.6 2.4zM14 4h4v16h-4s0-2.4-2-2.4-2 2.4-2 2.4H6V4h4s0 2.4 2 2.4S14 4 14 4z\"></path></svg>\n                    Events to <i>die</i> for\n                </div>\n\n                <div className='splash-event-tile-grid'>\n                    {allEvents?.map((ev,i)=>{\n                        return(\n                            <div className='splash-event-tile' id={`splash-event-tile-${i}`}>\n                                <div className='splash-event-tile-photo'>\n                                    <Link to={`/events/${ev.id}`}>\n                                        <img src={ev.imgUrl}/>\n                                    </Link>\n                                </div>\n                                <div className='splash-event-heart-like' onClick={(e)=>heartReact(e,ev)}>{heartIcon(ev)}</div>\n                                <div className='splash-event-tile-title'><Link to={`/events/${ev.id}`}>{ev.title?.toUpperCase()}</Link></div>\n                                <div className='splash-event-tile-timestamp'>{moment(ev.timestampStart).format('ddd, MMM d, h:MM A')}</div>\n                                <div className='splash-event-tile-location'>{ev.address}</div>\n                                <div className='splash-event-tile-organizer-name'>By {ev.organizerName}</div>\n                                \n                            </div> \n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n        </main>\n    </>\n    )\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/ShowEvent.js",["155","156","157","158"],[],"import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport moment from 'moment-timezone';\nimport * as eventActions from '../../store/eventsReducer'\nimport * as sessionActions from '../../store/sessionReducer'\nimport * as orderActions from '../../store/ordersReducer'\nimport * as userActions from '../../store/usersReducer'\nimport NavBarLoggedIn from \"../NavBar/NavBarLoggedIn\";\nimport NavBarLoggedOut from '../NavBar/NavBarLoggedOut';\nimport './ShowEvent.css'\nimport NotFoundErrorPage from \"../errorPages/NotFoundErrorPage\";\n\nexport default function ShowEvent () {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const {eventId} = useParams();\n    const currentUserId = useSelector(sessionActions.getCurrentUser)?.id\n    const currentUser = useSelector(userActions.getUser(currentUserId))\n\n    const [doneLoading, setDoneLoading] = useState(false);\n    const [event, setEvent] = useState(undefined)\n    const [numTickets, setNumTickets] = useState(0)\n    const [activeHeart, setActiveHeart] = useState(false)\n    const [withinCapacity,setWithinCapacity] = useState(true)\n\n    useEffect(()=> {\n        if (event?.capacity - event?.ticketsSold <= numTickets) setWithinCapacity(false) \n        else setWithinCapacity(true)\n    }, [numTickets])\n    \n    useEffect(() =>{\n        const awaitFetchBeforeLoading = async () => {\n            const res = await dispatch(eventActions.fetchEvent(eventId))\n            if (currentUserId) dispatch(userActions.fetchUserEvents(currentUserId));\n            setEvent(res[0])\n            setDoneLoading(res[1])\n        }\n        awaitFetchBeforeLoading()\n    }, [])\n\n    useEffect(() =>{\n        setActiveHeart(currentUser ? currentUser.likedEvents?.includes(parseInt(eventId)) : false)\n    }, [currentUser])\n\n    const handlePurchase = (eventId) => {\n\n        if (!currentUser) {\n            history.push('/signin')\n        } else {\n            const order = {\n                numTickets,\n                ticketholderId: currentUser.id,\n                eventId\n            }\n\n            return dispatch(orderActions.createOrder(order))\n            .then(history.push(`/user/${currentUser.id}`));\n        }\n    }\n\n    const handlePlusMinusClick = (e) =>{\n        if (e.target.innerHTML === '+') {\n            if (withinCapacity) setNumTickets(numTickets+1)\n        } else {\n            if (numTickets > 0) setNumTickets(numTickets-1)\n        }\n    }\n\n    const heartIcon = () => {\n        if (!activeHeart) {\n            return (<div className='show-event-empty-heart'><svg id='fa-heart-empty' xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\"> {/*<!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->*/}<path d=\"M225.8 468.2l-2.5-2.3L48.1 303.2C17.4 274.7 0 234.7 0 192.8v-3.3c0-70.4 50-130.8 119.2-144C158.6 37.9 198.9 47 231 69.6c9 6.4 17.4 13.8 25 22.3c4.2-4.8 8.7-9.2 13.5-13.3c3.7-3.2 7.5-6.2 11.5-9c0 0 0 0 0 0C313.1 47 353.4 37.9 392.8 45.4C462 58.6 512 119.1 512 189.5v3.3c0 41.9-17.4 81.9-48.1 110.4L288.7 465.9l-2.5 2.3c-8.2 7.6-19 11.9-30.2 11.9s-22-4.2-30.2-11.9zM239.1 145c-.4-.3-.7-.7-1-1.1l-17.8-20c0 0-.1-.1-.1-.1c0 0 0 0 0 0c-23.1-25.9-58-37.7-92-31.2C81.6 101.5 48 142.1 48 189.5v3.3c0 28.5 11.9 55.8 32.8 75.2L256 430.7 431.2 268c20.9-19.4 32.8-46.7 32.8-75.2v-3.3c0-47.3-33.6-88-80.1-96.9c-34-6.5-69 5.4-92 31.2c0 0 0 0-.1 .1s0 0-.1 .1l-17.8 20c-.3 .4-.7 .7-1 1.1c-4.5 4.5-10.6 7-16.9 7s-12.4-2.5-16.9-7z\"/></svg></div>)\n        } else return (<div className='show-event-filled-heart'><svg id='fa-heart-filled' xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\">{/*<!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->*/}<path d=\"M47.6 300.4L228.3 469.1c7.5 7 17.4 10.9 27.7 10.9s20.2-3.9 27.7-10.9L464.4 300.4c30.4-28.3 47.6-68 47.6-109.5v-5.8c0-69.9-50.5-129.5-119.4-141C347 36.5 300.6 51.4 268 84L256 96 244 84c-32.6-32.6-79-47.5-124.6-39.9C50.5 55.6 0 115.2 0 185.1v5.8c0 41.5 17.2 81.2 47.6 109.5z\"/></svg></div>)\n    }\n\n    const heartReact = () =>{ \n        setActiveHeart(!activeHeart)\n        currentUser['currentPageId'] = eventId    \n        dispatch(userActions.updateUser(currentUser)) \n    }\n    \n    if (!doneLoading) {\n        return <></>\n    } else {\n        if (event) {\n            return (\n                <>\n                    {currentUser ? <NavBarLoggedIn /> : <NavBarLoggedOut />}\n                    <main>\n                        <div className='show-event-photo-container'>\n                            <svg width='1676' height='430' viewBox='0 0 1676 430' fill-rule='evenodd'><g clip-path='url(#clip0_3405_50198)'><path fill-rule='evenodd' d='M1669.31 -124.702C1704.63 -198.281 1599.75 -278.89 1440.21 -219.509C1280.67 -160.128 1138.67 -174.472 940.588 -234.668C588.163 -341.792 438.492 -309.897 215.804 -220.763C150.423 -195.199 15.9418 -122.33 0.814447 -35.3897C-18.0424 73.26 298.334 62.7189 143.288 203.358C-11.7568 343.996 26.7216 552.457 835.628 313.658C939.215 283.079 1109.58 269.122 1259.68 366.729C1409.78 464.336 1549.16 434.834 1602.55 362.937C1716.96 208.836 1609.92 -1.08292 1669.31 -124.702Z' fill='#EDF1FC'/></g><defs><clipPath id='clip0_3405_50198'><rect width='1676' height='430' fill='white'/></clipPath></defs></svg>\n                            \n                            <div className='show-event-photo'>\n                                <img src={event.imgUrl}/>  \n                            </div>\n                        </div>\n\n                        <div className='show-event-centered show-event-details-container'>\n\n                            <div className='show-event-basic-details-1'>\n                                <div className='show-event-date-1'>\n                                    {moment(event.timestampStart).format('dddd, MMMM 5')}\n                                </div>\n                                <div className='show-event-title-1'>\n                                    {event.title}\n                                </div>\n                                <div className='show-event-organizer'>By {event.organizerName}</div>\n                                <div className='show-event-heart-like' onClick={heartReact}>\n                                    {heartIcon()}\n                                </div>\n                            </div>\n                        \n\n                            <div className='ticket-purchase-container'>\n                                <div className='ticket-price-count-container'>\n                                    <div className='ticket-price-container'>\n                                        General Admission<br/>{event.price ? `$${Number(event.price).toFixed(2)}` : 'Free'}\n                                    </div>\n                                    <button className={`${numTickets ? 'clickable-count ticket-count-decrease' : 'unclickable-count ticket-count-decrease'}`} \n                                        onClick={e=>{handlePlusMinusClick(e)}}>—</button>\n                                    <div className={withinCapacity ? 'ticket-count-text' : 'ticket-count-text error-text'}>{numTickets}</div>\n                                    <button className={withinCapacity ? 'ticket-count-increase clickable-count' : 'ticket-count-increase unclickable-count'} onClick={e=>{handlePlusMinusClick(e)}}>+</button>\n                                    <div className='ticket-purchase-capacity-hit'>{withinCapacity ? '' : `Event capacity hit! Can't purchase any more tickets`}</div>\n                                </div>\n                                <button className='ticket-purchase-button' \n                                    onClick={() =>handlePurchase(event.id)}>{event.price ? 'Get tickets' : 'Reserve a spot'}</button>\n                            </div>\n\n                            <div className='show-event-when-where-container'>\n                                <div className='show-event-when-where'>When and where</div>\n\n                                <div className='show-event-timestamp-container'>\n                                    <div className='show-event-svg-container'>\n                                        <svg className='show-event-svg' id='calendar-svg' xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 448 512\">{/*<!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->*/}<path d=\"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"/></svg>\n                                    </div>\n                                    <div className='show-event-date-location-header'>Date and time</div>\n                                    <div className='show-event-date-location-detail'>{`${moment(event.timestampStart).format('dddd, MMMM d · h:mm')}-${moment(event.timestampEnd).format('h:mm A')}`}</div>\n                                </div>\n\n                                <div class=\"vl\"></div>\n\n                                <div className='show-event-location-container'>\n                                    <div className='show-event-svg-container'>\n                                        <svg className='show-event-svg' i id='map-pin-svg' xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 384 512\">{/*<!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->*/}<path d=\"M215.7 499.2C267 435 384 279.4 384 192C384 86 298 0 192 0S0 86 0 192c0 87.4 117 243 168.3 307.2c12.3 15.3 35.1 15.3 47.4 0zM192 128a64 64 0 1 1 0 128 64 64 0 1 1 0-128z\"/></svg>\n                                    </div>\n                                    <div className='show-event-date-location-header'>Location</div>\n                                    <div className='show-event-date-location-detail'>{event.address}</div>\n                                </div>\n                            </div>\n                            \n                            <div className='show-event-about'>\n                                <div className='about-event-title'>About this event</div>\n                                <div className='event-length'>\n                                    <svg id='clock-svg' xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\">{/*<!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->*/}<path d=\"M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM232 120V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24s-24 10.7-24 24z\"/></svg>\n                                    <div className='event-length-in-hours'>\n                                        {parseInt(moment.duration(moment(event.timestampEnd).add(4,'hours').diff(moment(event.timestampStart).add(4,'hours'))).asHours())} hours\n                                    </div>\n                                </div>\n                                \n                                <div className='event-description'>\n                                    {event.description}\n                                </div>\n                            </div>\n                        </div>\n                        \n                    </main>\n                </>\n            )\n        } else return <NotFoundErrorPage />\n    }\n\n    \n    \n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/users/SignInForm.js",["159","160"],[],"import { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, Link } from 'react-router-dom';\nimport * as sessionActions from \"../../store/sessionReducer\"\nimport './Authentication.css';\n\nexport default function SignInForm (previousLocation) {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    // const navigate = useNavigate();\n    // need to set a sessionUser such that if present, redirect and do \n    // not allow user to sign up\n    // const [firstName, setFirstName] = useState('')\n    // const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [errors, setErrors] = useState([]);\n    const errorClassesArray = ['error-text', 'error-div', 'login-errors', 'email-errors', 'pw-errors']\n    \n    // useEffect(() => {\n    //     const previousLocation = sessionStorage.getItem('previousLocation');\n    \n    //     if (previousLocation) {\n    //       sessionStorage.removeItem('previousLocation');\n    \n    //       // Use a setTimeout to delay the navigation to the previous location\n    //       const timeoutId = setTimeout(() => {\n    //         history.replace(previousLocation);\n    //       }, 0); // Use a minimal delay\n    \n    //       return () => {\n    //         clearTimeout(timeoutId);\n    //       };\n    //     }\n    //   }, [history]);\n\n    const currentUser = useSelector(sessionActions.getCurrentUser)\n    debugger\n    if (currentUser) history.go(-1);\n\n\n    \n    const focusInput = (e) => {\n        e.stopPropagation()\n        const selectedEl = e.target\n        //blur anything that's currently focused\n        let arr = Array.from(document.querySelectorAll('*'))\n        arr.forEach(el=> {\n            if (el.classList.contains('.signup-signin-field-input')) {    \n                if (el !== selectedEl) el.blur()\n            } else if (el.classList.contains('auth-input-box')) {    \n                if (el !== selectedEl) el.classList.remove('active-div')\n            } else if (el.classList.contains('signup-signin-field-title')) {\n                if (el !== selectedEl) el.classList.remove('active-input')\n            }\n        })\n        //whichever div is clicked, find its input and focus it\n        if (selectedEl.classList.contains('auth-input-box')) {\n            e.stopPropagation()\n            if (selectedEl.classList.contains('error-div')) e.target.classList.remove('error-div')\n            let textFieldTitle = Array.from(selectedEl.childNodes).filter(el => el.classList.length && el.classList.contains('signup-signin-field-title'))[0]\n            textFieldTitle.classList.remove('error-text')\n            let input = Array.from(selectedEl.querySelectorAll('*')).filter(el=>el.classList.contains('signup-signin-field-input'))[0]\n            input.focus()\n        } else if (selectedEl.classList.contains('signup-signin-field-title')) {\n            e.stopPropagation()\n            if (selectedEl.classList.contains('error-input')) selectedEl.classList.remove('error-input')\n            let outerDiv = selectedEl.parentNode\n            outerDiv.classList.remove('error-div')\n            let input = Array.from(outerDiv.querySelectorAll('*')).filter(el=>el.classList.contains('signup-signin-field-input'))[0]\n            input.focus()\n\n        } else if (selectedEl.classList.contains('signup-signin-field-input')) {\n            e.stopPropagation()\n            selectedEl.focus()\n        }\n    }\n\n    function setClosestDivsActive(e){\n\n        //add 'focus' class to both surrounding divs of the input\n        //that was focused\n        if (errorClassesArray.forEach(e1=>{if(Array.from(e.target.classList).includes(e1)) return true})) {\n            return\n        }\n        let outerDiv = e.target.closest('div')\n        outerDiv.classList.add('active-div')\n\n        let textFieldTitle = Array.from(outerDiv.querySelectorAll('*')).filter(el => el.classList.contains('signup-signin-field-title'))[0]\n        textFieldTitle?.classList.add('active-input')\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        setErrors([])\n        return dispatch(sessionActions.login({email, password}))\n            .catch(async (res) => {\n                let data;\n                try {\n                    data = await res.clone().json();\n                } catch {\n                    data = await res.text();\n                }\n                if (data?.errors) {\n                    setErrors(data.errors)\n                }\n                else if (data) setErrors([data]);\n                else setErrors([res.statusText]);\n            })\n            // .finally((res)=>{\n            //     debugger\n            //     if (res?.ok) history.push('/')\n            // })\n    };\n\n    const demoLogin = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        return dispatch(sessionActions.login({\n            email: 'demo@demo.com',\n            password: 'password'\n        }))\n    }\n    \n    return(\n        <>\n            <main>\n                <section className='split split-left' id='signin' onClick={e => focusInput(e)}>\n                    <div className='auth-centered'>\n                        <div id='eblogo-auth'>\n                            <Link to='/'>\n                                <img src='https://eventbite-dev.s3.amazonaws.com/eventbite+logo.jpg' />\n                            </Link>\n                        </div>\n                        <h1 id='signup-signin-h1'>Log in</h1>\n\n                        <form>\n                            <div className={errors.length ? `error-div auth-input-box` :`auth-input-box`}>\n                                <div className={errors.length ? 'error-text signup-signin-field-title' : 'signup-signin-field-title'}>\n                                    Email address\n                                </div>\n\n                                <br />\n\n                                <span >\n                                    <label>\n                                        <input className='signup-signin-field-input'\n                                               type='text' \n                                               name='email'\n                                               onChange={e => setEmail(e.target.value.toLowerCase())}\n                                               onFocus={e => setClosestDivsActive(e)}\n                                        />\n                                    </label>\n                                </span>\n                            </div>\n\n                            <br />\n\n                            <div className={errors.length ? `error-div auth-input-box` :`auth-input-box`}>\n                                <div className={errors.length ? 'error-text signup-signin-field-title' : 'signup-signin-field-title'}>\n                                    Password\n                                </div>\n\n                                <br />\n\n                                <span >\n                                    <label>\n                                        <input className='signup-signin-field-input'\n                                               type='password' \n                                               name='password'\n                                               onChange={e => setPassword(e.target.value)}\n                                               onFocus={e => setClosestDivsActive(e)}\n                                        />\n                                    </label>\n                                </span>\n                            </div>\n\n                            <br />\n\n                            <div className='login-errors error-text'>\n                                {errors[0]}\n                            </div>\n\n                            <br />\n\n                            <button className='auth-button' onClick={handleSubmit}>\n                                Log in\n                            </button>\n\n                            <button className='auth-button 'id='demo-login' onClick={demoLogin}>\n                                Log in demo user\n                            </button>\n                        </form>\n                        <div className='signup-signin-switch'>\n                            <Link to='/signup'>Sign up</Link>\n                        </div>\n                    </div>\n                </section>\n                <section className='split split-right' id='auth-side-photo'>\n                    <div className='auth-centered login-image'>\n                        {/* <img src='https://i.ibb.co/Qp4jyky/Screenshot-2023-07-26-at-1-38-15-PM.png' /> */}\n                    </div>\n                </section>\n            </main>\n        </>\n    )\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/CreateEvent.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/events/SearchEvents.js",["161","162","163","164"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/errorPages/NotFoundErrorPage.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/NavBar/NavBarLoggedIn.js",["165","166","167","168","169"],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/NavBar/NavBarLoggedOut.js",["170","171"],[],"import { Link } from 'react-router-dom';\nimport './NavBarLoggedOut.css';\n\nexport default function NavBarLoggedOut (previousLocation) {\n\n    return (\n        <>\n        <nav id='main-navigation'>\n            <div className='navbar-out-container'>\n                <ul className='navbar-ul'>\n                    <li className='nav-left'> \n                        <Link to='/'>\n                            <div id='eblogo-nav' />\n                        </Link>\n                    </li>\n\n                    <li className='nav-left'> \n                        <Link to='/search'>\n                            <div id='nav-search-events'>\n                                <svg id=\"magnifying-glass\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"magnifying-glass-chunky_svg__eds-icon--magnifying-glass-chunky_base\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10 14c2.2 0 4-1.8 4-4s-1.8-4-4-4-4 1.8-4 4 1.8 4 4 4zm3.5.9c-1 .7-2.2 1.1-3.5 1.1-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6c0 1.3-.4 2.5-1.1 3.4l5.1 5.1-1.5 1.5-5-5.1z\"></path></svg>\n                                <div id='search-text'>Find your next meal</div>\n                            </div>\n                        </Link> \n                    </li>\n\n                    <li className='nav-right'>\n                        <Link to='/signup'>\n                            <div id='nav-out-signup'>\n                                <div id='nav-out-signup-text'>Sign Up\n                                </div>\n                            </div>\n                        </Link>\n                    </li>\n\n                    <li className='nav-right'>\n                        <Link to='/signin' previouslocation={previousLocation}>\n                            <div id='nav-out-signin'>\n                                <div id='nav-out-signin-text'>Log In\n                                </div>\n                            </div>\n                        </Link>\n                    </li>\n\n                    <li className='nav-right'> \n                        <Link to='/signin'>\n                            <div id='create-event-out'>\n                                <div id='create-event-out-text'>Create an event</div>\n                            </div>\n                        </Link>\n                    </li>\n\n                    <li className='nav-right help-organize'> \n                        <div className='help-organize-about-dropdown' id='help-dropdown'>\n                            <div className='help-organize-about-text' id='help-text'>Help</div>\n                            <svg className=\"help-organize-about-chevron-down\" id='help-chevron' x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"chevron-down-chunky_svg__eds-icon--chevron-down-chunky_base\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7 10.2l5 5 5-5-1.4-1.4-3.6 3.6-3.6-3.6z\"></path></svg>\n                            <div className='dropdown-content hidden' id='help-dropdown-content'>\n                                <ul>\n                                    <li>\n                                        <Link to='/signin'>\n                                            <div className='dropdown-content-text-box'>Find your tickets</div>\n                                        </Link>\n                                    </li>\n                                    <li>\n                                        <Link to='/signin'>\n                                            <div className='dropdown-content-text-box'>Contact an event organizer</div>\n                                        </Link>\n                                    </li>\n                                    <li>\n                                        <Link to='/signin'>\n                                            <div className='dropdown-content-text-box'>Visit the help center</div>\n                                        </Link>\n                                    </li>\n                                </ul> \n                            </div>\n                        </div>\n                    </li>\n\n                    <li className='nav-right help-organize'> \n                        <div className='help-organize-about-dropdown' id='organize-dropdown'>\n                            <div className='help-organize-about-text' id='organize-text'>Organize</div>\n                            <svg className=\"help-organize-about-chevron-down\" id='organize-chevron' x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"chevron-down-chunky_svg__eds-icon--chevron-down-chunky_base\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7 10.2l5 5 5-5-1.4-1.4-3.6 3.6-3.6-3.6z\"></path></svg>\n                            <div className='dropdown-content hidden' id='organize-dropdown-content'>\n                                <ul>\n                                    <li>\n                                        <Link to='/signin'>\n                                            <div className='dropdown-content-text-box'>Create Events</div>\n                                        </Link>\n                                    </li>\n                                    <li>\n                                        <Link to='/signin'>\n                                            <div className='dropdown-content-text-box'>Pricing</div>\n                                        </Link>\n                                    </li>\n                                    <li>\n                                        <Link to='/signin'>\n                                            <div className='dropdown-content-text-box'>Resources</div>\n                                        </Link>\n                                    </li>\n                                </ul> \n                            </div>\n                        </div>\n                    </li>\n\n                    <li className='nav-right about-the-developer'> \n                        <div className='help-organize-about-dropdown' id='about-dropdown'>\n                            <div className='help-organize-about-text'>About the developer</div>\n                            <svg className=\"help-organize-about-chevron-down\" id='about-chevron' x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"chevron-down-chunky_svg__eds-icon--chevron-down-chunky_base\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7 10.2l5 5 5-5-1.4-1.4-3.6 3.6-3.6-3.6z\"></path></svg>\n                            <div className='dropdown-content hidden' id='about-the-developer-dropdown-content'>\n                                <ul>\n                                    <li>\n                                        <a target=\"_blank\" href='https://www.github.com/jprandazzo'>\n                                            <div className='dropdown-content-text-box'>Joe's Github</div>\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a target=\"_blank\" href='https://www.linked.com/in/jprandazzo'>\n                                            <div className='dropdown-content-text-box'>Joe's LinkedIn</div>\n                                        </a>\n                                    </li>\n                                    <li>\n                                        <a target=\"_blank\" href='/signin'>\n                                            <div className='dropdown-content-text-box'>Joe's Website</div>\n                                        </a>\n                                    </li>\n                                </ul> \n                            </div>\n                        </div>\n                    </li>\n\n                </ul>\n            <hr className='navbar-in-fullscreen-hr'/>\n            </div>\n\n        </nav>\n        </>\n    )\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/ordersReducer.js",["172","173"],[],"import csrfFetch from \"./csrf\";\n\nconst RECEIVE_ORDER = 'receiveOrders';\nconst RECEIVE_USER_ORDERS = 'receiveUserOrders';\nconst RECEIVE_USER_EVENTS = 'receiveUserEvents'\nconst REMOVE_ORDER = 'removeOrders';\n\nexport const getOrder = (orderId) => state => {\n    return state.orders ? state.orders[orderId] : null\n}\n\nexport const getOrders = state => {\n    return state && state.orders ? Object.values(state.orders) : []\n}\n\nexport const fetchOrder = orderId => async dispatch =>{\n    const response = await fetch(`/api/orders/${orderId}`)\n    const data = await response.json();\n\n    if (response.ok) {\n        dispatch({\n            type: RECEIVE_ORDER,\n            order: data.order\n        })\n    }\n    return [data.order, true]\n}\n\nexport const createOrder = (order) => async dispatch => {\n    const response = await csrfFetch(`/api/orders`, {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(order)\n    })\n    const data = response.json()\n\n    dispatch({\n        type: REMOVE_ORDER,\n        order: data.order\n    })\n}\n\nexport const deleteOrder = (orderId) => async dispatch => {\n    const response = await csrfFetch(`/api/orders/${orderId}`, {\n        method: 'DELETE',\n        headers: {'Content-Type': 'application/json'},\n    })\n\n    dispatch({\n        type: REMOVE_ORDER,\n        orderId: orderId\n    })\n}\n\nconst ordersReducer = (oldState = {}, action) => {\n    let newState = {...oldState}\n    switch (action.type) {\n        // case RECEIVE_ORDERS:    \n        //     newState = {...oldState,...action.orders}\n        //     return newState\n        case RECEIVE_ORDER:\n            newState[action.order.id] = action.order\n            return newState\n        case RECEIVE_USER_EVENTS:\n            newState = {...oldState,...action.orders}\n            return newState\n        case REMOVE_ORDER:\n            delete newState[action.orderId]\n            return newState\n        default:\n            return oldState\n    }\n}\n\nexport default ordersReducer","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/orders/OrderIndex.js",["174","175","176","177","178"],[],"import { useSelector, useDispatch } from 'react-redux';\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport moment from 'moment-timezone';\nimport { useEffect } from \"react\";\n\nimport NavBarLoggedIn from '../NavBar/NavBarLoggedIn';\nimport * as sessionActions from '../../store/sessionReducer';\nimport * as userActions from '../../store/usersReducer';\nimport * as eventActions from '../../store/eventsReducer';\nimport * as orderActions from '../../store/ordersReducer';\nimport * as searchActions from '../../store/searchReducer';\nimport './OrderIndex.css'\n\nexport default function OrderIndex () {\n    const dispatch = useDispatch();\n    const currentUserId = useSelector(sessionActions.getCurrentUser)?.id\n    const currentUser = useSelector(userActions.getUser(currentUserId))\n    const orders = useSelector(orderActions.getOrders).sort((a,b) => b.id - a.id)\n    const events = useSelector(eventActions.getEvents)\n\n    useEffect(() =>{\n        let getData = setTimeout(() => {\n            dispatch(userActions.fetchUserEvents(currentUserId));\n          }, 0)\n        return () => clearTimeout(getData)\n    }, [])\n\n    const pluralizeOrders = (orders) =>{\n        if (!orders?.length) return 'orders';\n        if (currentUser && orders?.length === 1) {\n            return '1 order'\n        } else return `${orders?.length} orders`\n    }\n\n    const pluralizeLikes = (likes) =>{\n        if (currentUser && likes.length === 1) {\n            return '1 like'\n        } else return `${likes.length} likes`\n    }\n\n    const toggleHide = e => {\n        document.querySelectorAll('order-tile-dropdown-delete-button').forEach(button=>button.classList.add('hidden'));\n        if (e.target.classList.contains('trigger-toggle')) {\n            let oid = Array.from(e.target.classList)[2]?.slice(6)\n            document.querySelector(`#delete-button-${oid}`)?.classList.toggle('hidden')\n        }\n    }\n    \n    if (currentUser) {return (\n        <>\n            <NavBarLoggedIn />\n            <main id='order-index-main'>\n            <section id='order-index-centered' onClick={(e)=>toggleHide(e)}>\n                <div id='order-index-name-tile'>\n                    <div id='order-index-user-photo'>\n                    <svg id=\"order-index-user-svg\" x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path id=\"user_svg__eds-icon--user_base\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.2 19.1c1-2.8 3.7-4.7 6.7-4.7s5.7 1.9 6.7 4.7c-4.1 2.5-9.3 2.5-13.4 0zm16.1-1.9c-.5.5-1.1 1-1.7 1.5a8.15 8.15 0 00-7.6-5.2c-3.3 0-6.3 2.1-7.6 5.1-.6-.4-1.1-.9-1.6-1.4l-.8.7C4.8 20.6 8.4 22 12 22s7.2-1.4 10-4.1l-.7-.7z\"></path><path id=\"user_svg__eds-icon--user_head\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12 2C9.2 2 7 4.2 7 7s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 9c-2.2 0-4-1.8-4-4s1.8-4 4-4 4 1.8 4 4-1.8 4-4 4z\"></path></svg>\n                    </div>\n                    <div id='order-index-name-tile-name'>{`${currentUser?.firstName} ${currentUser.lastName}`}</div>\n                    <div className='order-index-orders-likes' id='order-index-orders-count'>{currentUser ? pluralizeOrders(currentUser.orders) : ''}</div>\n                    <div id='order-index-likes-dot'>·</div>\n                    <div className='order-index-orders-likes' id='order-index-likes-count'>{currentUser ? pluralizeLikes(currentUser.likedEvents) : ''}</div>\n                </div>\n\n                <div id='order-index-container'>\n                    <div id='orders-title-box'>Orders</div>\n                    {orders.map((order, i) =>{\n                        const event = events.filter(event => event.id === order.eventId)[0]\n                        return(\n                            <>\n                    <div className='order-index-event-tile'>\n                        <Link to={`/events/${event.id}`} className='order-index-tile-photo-link' target='_blank'><div className='order-index-tile-photo'><img src={event.imgUrl}/></div></Link>\n                        <div className='order-tile-date-small'>\n                            <div className='order-tile-date-month'>{moment(event.timestampStart).format('MMM')}</div>\n                            <div className='order-tile-date-day'>{moment(event.timestampStart).format('D')}</div>\n                        </div>\n                        <Link to={`/events/${event.id}`} className='order-index-tile-link' target='_blank'><div className='order-index-tile-title'>{event.title}</div></Link>\n                        <div className='order-tile-timestamp'>{moment(event.timestampStart).format('ddd, MMM d, h:MM A')}</div>\n                        <div className='order-tile-order-price-date'>{`$${(event.price * order.numTickets).toFixed(2)} order` || 'Free order'} {`#${order.id}`} placed on {moment(order.createdAt).format('ddd, MMM DD, h:MM A')}</div>\n                        <div className={`order-tile-edit-dropdown-dots trigger-toggle order-${order.id}`}>\n                            <svg className={`order-tile-vertical-dots-chunky-svg trigger-toggle order-${order.id}`} x=\"0\" y=\"0\" viewBox=\"0 0 24 24\"><path className={`trigger-toggle order-${order.id}`} id=\"vertical-dots-chunky_svg__eds-icon--vertical-dots-chunky_dot_2\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10 18c0-1.1.9-2 2-2s2 .9 2 2-.9 2-2 2-2-.9-2-2z\"></path><circle className={`trigger-toggle order-${order.id}`} id=\"vertical-dots-chunky_svg__eds-icon--vertical-dots-chunky_dot\" fillRule=\"evenodd\" clipRule=\"evenodd\" cx=\"12\" cy=\"12\" r=\"2\"></circle><circle className={`trigger-toggle order-${order.id}`} id=\"vertical-dots-chunky_svg__eds-icon--vertical-dots-chunky_dot_1\" fillRule=\"evenodd\" clipRule=\"evenodd\" cx=\"12\" cy=\"6\" r=\"2\"></circle></svg>\n                        </div>\n                        <div className={`order-tile-dropdown-delete-button hidden`} id={`delete-button-${order.id}`} onClick={()=>dispatch(orderActions.deleteOrder(order.id))}>\n                            Delete order\n                            <div className='delete-are-you-sure'>Are you sure??</div>\n                        </div>\n                    </div>\n                    \n                            </>\n\n                            \n                        )\n                    })}\n                </div>\n            </section>\n            </main>\n        </>\n    )}\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/orders/OrderShow.js",[],[],"/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/components/likes/LikedEvents.js",["179","180","181","182","183"],[],"import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport moment from 'moment-timezone';\nimport * as eventActions from '../../store/eventsReducer'\nimport * as sessionActions from '../../store/sessionReducer'\nimport * as orderActions from '../../store/ordersReducer'\nimport * as userActions from '../../store/usersReducer'\nimport NavBarLoggedIn from \"../NavBar/NavBarLoggedIn\";\nimport NavBarLoggedOut from '../NavBar/NavBarLoggedOut';\nimport './LikedEvents.css'\nimport NotFoundErrorPage from \"../errorPages/NotFoundErrorPage\";\n\nexport default function LikedEvents () {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [doneLoading, setDoneLoading] = useState(false);\n    \n    const currentUserId = useSelector(sessionActions.getCurrentUser)?.id\n    const currentUser = useSelector(userActions.getUser(currentUserId))\n    const [updatedLikedEvents, setUpdatedLikedEvents] = useState(currentUserId && currentUser ? [...currentUser.likedEvents] : [])\n    window.updatedLikedEvents = updatedLikedEvents;\n    debugger\n\n    const allEvents = Array.from(useSelector(eventActions.getEvents))\n    const userLikedEvents = (currentUser && allEvents) ? allEvents.filter(ev => currentUser.likedEvents.includes(ev.id)) : []\n\n    useEffect(() =>{\n        const awaitFetchBeforeLoading = async () => {\n            const res = await dispatch(eventActions.fetchEvents())\n            if (currentUserId) dispatch(userActions.fetchUserEvents(currentUserId));\n            // setEvents(res[0])\n            setDoneLoading(res[1])\n        }\n        awaitFetchBeforeLoading()\n        setUpdatedLikedEvents(currentUser?.likedEvents)\n    }, [])\n\n    useEffect(()=> {\n        setUpdatedLikedEvents(currentUser?.likedEvents)\n    }, [currentUser])\n\n    useEffect(() => {\n        const cleanup = () => {\n            // Dispatch your action here\n            debugger\n            dispatch(userActions.updateUser({...currentUser, likedEvents: updatedLikedEvents}));\n            console.log(\"Component is unloading or navigating away\");\n        };\n    \n        // Listen for the 'beforeunload' event\n        window.addEventListener(\"beforeunload\", cleanup);\n    \n        // Listen for the 'popstate' event (user navigates away)\n        const unlisten = history.listen(() => {\n            cleanup();\n        });\n    \n        return () => {\n            // Remove the event listeners and clean up\n            window.removeEventListener(\"beforeunload\", cleanup);\n            unlisten();\n        };\n    }, [dispatch, history, updatedLikedEvents]);\n\n    const emptyHeart = () => {\n        return <div className='liked-events-empty-heart'><svg id='fa-heart-empty' xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\"> {/*<!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->*/}<path d=\"M225.8 468.2l-2.5-2.3L48.1 303.2C17.4 274.7 0 234.7 0 192.8v-3.3c0-70.4 50-130.8 119.2-144C158.6 37.9 198.9 47 231 69.6c9 6.4 17.4 13.8 25 22.3c4.2-4.8 8.7-9.2 13.5-13.3c3.7-3.2 7.5-6.2 11.5-9c0 0 0 0 0 0C313.1 47 353.4 37.9 392.8 45.4C462 58.6 512 119.1 512 189.5v3.3c0 41.9-17.4 81.9-48.1 110.4L288.7 465.9l-2.5 2.3c-8.2 7.6-19 11.9-30.2 11.9s-22-4.2-30.2-11.9zM239.1 145c-.4-.3-.7-.7-1-1.1l-17.8-20c0 0-.1-.1-.1-.1c0 0 0 0 0 0c-23.1-25.9-58-37.7-92-31.2C81.6 101.5 48 142.1 48 189.5v3.3c0 28.5 11.9 55.8 32.8 75.2L256 430.7 431.2 268c20.9-19.4 32.8-46.7 32.8-75.2v-3.3c0-47.3-33.6-88-80.1-96.9c-34-6.5-69 5.4-92 31.2c0 0 0 0-.1 .1s0 0-.1 .1l-17.8 20c-.3 .4-.7 .7-1 1.1c-4.5 4.5-10.6 7-16.9 7s-12.4-2.5-16.9-7z\"/></svg></div>\n    }\n\n    const filledHeart = () => {\n        return <div className='liked-events-filled-heart'><svg id='fa-heart-filled' xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\">{/*<!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->*/}<path d=\"M47.6 300.4L228.3 469.1c7.5 7 17.4 10.9 27.7 10.9s20.2-3.9 27.7-10.9L464.4 300.4c30.4-28.3 47.6-68 47.6-109.5v-5.8c0-69.9-50.5-129.5-119.4-141C347 36.5 300.6 51.4 268 84L256 96 244 84c-32.6-32.6-79-47.5-124.6-39.9C50.5 55.6 0 115.2 0 185.1v5.8c0 41.5 17.2 81.2 47.6 109.5z\"/></svg></div>\n    }\n\n    // useEffect(() => {\n\n    // }, updatedUser)\n\n    const heartReact = (e,ev) =>{ \n        e.stopPropagation();\n        debugger\n        const likedEvents = [...updatedLikedEvents]; // Create a new array\n    \n        if (likedEvents.includes(ev.id)) {\n            const index = likedEvents.indexOf(ev.id);\n            likedEvents.splice(index, 1);\n        } else {\n            likedEvents.push(ev.id);\n        }\n        setUpdatedLikedEvents(likedEvents);\n        debugger\n    }\n\n    if (!doneLoading || !currentUser || !allEvents) {\n        return <></>\n    } else {\n        if (allEvents) {return(\n            <>\n            {currentUser ? <NavBarLoggedIn /> : <NavBarLoggedOut />}\n            <main className='likes-main'>\n                <div className='likes-title'>\n                    Likes\n                </div>\n\n                <div className='events-container'>\n                    {userLikedEvents?.map((ev,i)=>{\n                        return(\n                            <div className='liked-event-tile' id={`liked-event-tile-${i}`}>\n                                <div className='liked-event-tile-title liked-event-tile-left'><Link to={`/events/${ev.id}`}>{ev.title.toUpperCase()}</Link></div>\n                                <div className='liked-event-tile-timestanp liked-event-tile-left'>{moment(ev.timestampStart).format('ddd, MMM d, h:MM A')}</div>\n                                <div className='liked-event-tile-location liked-event-tile-left'>{ev.address}</div>\n                                <div className='liked-event-tile-photo liked-event-tile-right'><Link to={`/events/${ev.id}`}><img src={ev.imgUrl}/></Link></div>\n                                <div className='liked-event-heart-like liked-event-tile-right' onClick={(e)=>heartReact(e,ev)}>{updatedLikedEvents?.includes(ev.id) ? filledHeart() : emptyHeart()}</div>\n                            </div> \n                        )\n                        \n                    })}\n                </div>\n            </main>\n            </>\n        )\n    } else return <NotFoundErrorPage />\n}\n}","/Users/joerandazzo/Documents/App Academy/aA Projects/eventbite/frontend/src/store/searchReducer.js",[],[],{"ruleId":"184","severity":1,"message":"185","line":74,"column":11,"nodeType":"186","messageId":"187","endLine":74,"endColumn":19},{"ruleId":"184","severity":1,"message":"188","line":6,"column":7,"nodeType":"186","messageId":"187","endLine":6,"endColumn":26},{"ruleId":"184","severity":1,"message":"189","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"190","line":20,"column":11,"nodeType":"186","messageId":"187","endLine":20,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":115,"column":37,"nodeType":"193","endLine":115,"endColumn":108},{"ruleId":"194","severity":1,"message":"195","line":17,"column":31,"nodeType":"196","messageId":"197","endLine":17,"endColumn":60,"fix":"198"},{"ruleId":"199","severity":1,"message":"200","line":30,"column":8,"nodeType":"201","endLine":30,"endColumn":10,"suggestions":"202"},{"ruleId":"191","severity":1,"message":"192","line":106,"column":59,"nodeType":"193","endLine":106,"endColumn":80},{"ruleId":"199","severity":1,"message":"203","line":25,"column":8,"nodeType":"201","endLine":25,"endColumn":10,"suggestions":"204"},{"ruleId":"184","severity":1,"message":"205","line":54,"column":12,"nodeType":"186","messageId":"187","endLine":54,"endColumn":18},{"ruleId":"199","severity":1,"message":"206","line":17,"column":8,"nodeType":"201","endLine":17,"endColumn":10,"suggestions":"207"},{"ruleId":"199","severity":1,"message":"200","line":27,"column":8,"nodeType":"201","endLine":27,"endColumn":10,"suggestions":"208"},{"ruleId":"191","severity":1,"message":"192","line":81,"column":41,"nodeType":"193","endLine":81,"endColumn":63},{"ruleId":"199","severity":1,"message":"209","line":30,"column":8,"nodeType":"201","endLine":30,"endColumn":20,"suggestions":"210"},{"ruleId":"199","severity":1,"message":"211","line":40,"column":8,"nodeType":"201","endLine":40,"endColumn":10,"suggestions":"212"},{"ruleId":"199","severity":1,"message":"213","line":44,"column":8,"nodeType":"201","endLine":44,"endColumn":21,"suggestions":"214"},{"ruleId":"191","severity":1,"message":"192","line":94,"column":33,"nodeType":"193","endLine":94,"endColumn":58},{"ruleId":"184","severity":1,"message":"189","line":1,"column":20,"nodeType":"186","messageId":"187","endLine":1,"endColumn":29},{"ruleId":"191","severity":1,"message":"192","line":133,"column":33,"nodeType":"193","endLine":133,"endColumn":104},{"ruleId":"199","severity":1,"message":"200","line":44,"column":8,"nodeType":"201","endLine":44,"endColumn":10,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":79,"column":70,"nodeType":"193","endLine":79,"endColumn":110},{"ruleId":"216","severity":1,"message":"217","line":95,"column":66,"nodeType":"193","endLine":95,"endColumn":106},{"ruleId":"199","severity":1,"message":"218","line":134,"column":8,"nodeType":"201","endLine":134,"endColumn":48,"suggestions":"219"},{"ruleId":"184","severity":1,"message":"189","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":19},{"ruleId":"184","severity":1,"message":"220","line":5,"column":13,"nodeType":"186","messageId":"187","endLine":5,"endColumn":25},{"ruleId":"184","severity":1,"message":"221","line":60,"column":13,"nodeType":"186","messageId":"187","endLine":60,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":132,"column":41,"nodeType":"193","messageId":"224","endLine":132,"endColumn":101,"fix":"225"},{"ruleId":"222","severity":1,"message":"223","line":137,"column":41,"nodeType":"193","messageId":"224","endLine":137,"endColumn":106,"fix":"226"},{"ruleId":"222","severity":1,"message":"223","line":111,"column":41,"nodeType":"193","messageId":"224","endLine":111,"endColumn":101,"fix":"227"},{"ruleId":"222","severity":1,"message":"223","line":116,"column":41,"nodeType":"193","messageId":"224","endLine":116,"endColumn":104,"fix":"228"},{"ruleId":"184","severity":1,"message":"188","line":4,"column":7,"nodeType":"186","messageId":"187","endLine":4,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":44,"column":11,"nodeType":"186","messageId":"187","endLine":44,"endColumn":19},{"ruleId":"184","severity":1,"message":"229","line":2,"column":16,"nodeType":"186","messageId":"187","endLine":2,"endColumn":26},{"ruleId":"184","severity":1,"message":"230","line":2,"column":28,"nodeType":"186","messageId":"187","endLine":2,"endColumn":39},{"ruleId":"184","severity":1,"message":"231","line":11,"column":13,"nodeType":"186","messageId":"187","endLine":11,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":26,"column":8,"nodeType":"201","endLine":26,"endColumn":10,"suggestions":"232"},{"ruleId":"191","severity":1,"message":"192","line":71,"column":154,"nodeType":"193","endLine":71,"endColumn":179},{"ruleId":"184","severity":1,"message":"233","line":3,"column":16,"nodeType":"186","messageId":"187","endLine":3,"endColumn":25},{"ruleId":"184","severity":1,"message":"234","line":7,"column":13,"nodeType":"186","messageId":"187","endLine":7,"endColumn":25},{"ruleId":"199","severity":1,"message":"235","line":37,"column":8,"nodeType":"201","endLine":37,"endColumn":10,"suggestions":"236"},{"ruleId":"199","severity":1,"message":"237","line":64,"column":8,"nodeType":"201","endLine":64,"endColumn":47,"suggestions":"238"},{"ruleId":"191","severity":1,"message":"192","line":111,"column":126,"nodeType":"193","endLine":111,"endColumn":148},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'RECEIVE_USER_ORDERS' is assigned a value but never used.","'useEffect' is defined but never used.","'errorClassesArray' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-whitespace-before-property","Unexpected whitespace before property organizedEvents.","MemberExpression","unexpectedWhitespace",{"range":"239","text":"240"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUserId' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["241"],"React Hook useEffect has missing dependencies: 'currentUser?.id', 'dispatch', and 'eventId'. Either include them or remove the dependency array.",["242"],"'errors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["243"],["244"],"React Hook useEffect has missing dependencies: 'event?.capacity' and 'event?.ticketsSold'. Either include them or remove the dependency array.",["245"],"React Hook useEffect has missing dependencies: 'currentUserId', 'dispatch', and 'eventId'. Either include them or remove the dependency array.",["246"],"React Hook useEffect has a missing dependency: 'eventId'. Either include it or remove the dependency array.",["247"],["248"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'timer'. Either include them or remove the dependency array.",["249"],"'eventActions' is defined but never used.","'res' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"250","text":"251"},{"range":"252","text":"251"},{"range":"253","text":"251"},{"range":"254","text":"251"},"'useHistory' is defined but never used.","'useLocation' is defined but never used.","'searchActions' is defined but never used.",["255"],"'useParams' is defined but never used.","'orderActions' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser?.likedEvents', 'currentUserId', and 'dispatch'. Either include them or remove the dependency array.",["256"],"React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["257"],[754,757],"?.",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"258","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"258","fix":"271"},{"desc":"272","fix":"273"},[8055,8055]," rel=\"noreferrer\"",[8395,8395],[6540,6540],[6878,6878],{"desc":"258","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [currentUserId, dispatch]",{"range":"279","text":"280"},"Update the dependencies array to be: [currentUser?.id, dispatch, eventId]",{"range":"281","text":"282"},"Update the dependencies array to be: [dispatch]",{"range":"283","text":"284"},{"range":"285","text":"280"},"Update the dependencies array to be: [event?.capacity, event?.ticketsSold, numTickets]",{"range":"286","text":"287"},"Update the dependencies array to be: [currentUserId, dispatch, eventId]",{"range":"288","text":"289"},"Update the dependencies array to be: [currentUser, eventId]",{"range":"290","text":"291"},{"range":"292","text":"280"},"Update the dependencies array to be: [queryString, queryPrice, queryCategory, history, timer, dispatch]",{"range":"293","text":"294"},{"range":"295","text":"280"},"Update the dependencies array to be: [currentUser?.likedEvents, currentUserId, dispatch]",{"range":"296","text":"297"},"Update the dependencies array to be: [currentUser, dispatch, history, updatedLikedEvents]",{"range":"298","text":"299"},[1450,1452],"[currentUserId, dispatch]",[1036,1038],"[currentUser?.id, dispatch, eventId]",[535,537],"[dispatch]",[1092,1094],[1360,1372],"[event?.capacity, event?.ticketsSold, numTickets]",[1727,1729],"[currentUserId, dispatch, eventId]",[1859,1872],"[currentUser, eventId]",[1934,1936],[7972,8012],"[queryString, queryPrice, queryCategory, history, timer, dispatch]",[1128,1130],[1757,1759],"[currentUser?.likedEvents, currentUserId, dispatch]",[2609,2648],"[currentUser, dispatch, history, updatedLikedEvents]"]