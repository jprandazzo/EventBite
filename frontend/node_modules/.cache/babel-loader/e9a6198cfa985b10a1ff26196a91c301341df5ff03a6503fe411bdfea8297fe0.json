{"ast":null,"code":"export const csrfFetch = async (url, options = {}) => {\n  options.method ||= \"GET\";\n  options.headers ||= {};\n\n  // will need to modify this when using formData to attach resources like photos\n  // can't have a Content-Type header\n  if (options.method.toUpperCase() !== \"GET\") {\n    options.headers['Content-Type'] = 'application/json';\n    options.headers['X-CSRF-Token'] = sessionStorage.getItem('X-CSRF-Token');\n    debugger;\n  }\n  debugger;\n  const res = await fetch(url, options);\n  if (res.status >= 400) throw res;\n  return res;\n};","map":{"version":3,"names":["csrfFetch","url","options","method","headers","toUpperCase","sessionStorage","getItem","res","fetch","status"],"sources":["/Users/joerandazzo/Documents/App Academy/aA Projects/Eventbite2/eventbite/frontend/src/store/csrf.js"],"sourcesContent":["export const csrfFetch = async (url, options = {}) => {\n    options.method ||= \"GET\";\n    options.headers ||= {};\n\n    // will need to modify this when using formData to attach resources like photos\n        // can't have a Content-Type header\n    if (options.method.toUpperCase() !== \"GET\") {\n        options.headers['Content-Type'] = 'application/json';\n        options.headers['X-CSRF-Token'] = sessionStorage.getItem('X-CSRF-Token');\n        debugger\n    }\n    debugger\n    const res = await fetch(url, options);\n    if (res.status >= 400) throw res;\n    return res\n}"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAClDA,OAAO,CAACC,MAAM,KAAK,KAAK;EACxBD,OAAO,CAACE,OAAO,KAAK,CAAC,CAAC;;EAEtB;EACI;EACJ,IAAIF,OAAO,CAACC,MAAM,CAACE,WAAW,CAAC,CAAC,KAAK,KAAK,EAAE;IACxCH,OAAO,CAACE,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;IACpDF,OAAO,CAACE,OAAO,CAAC,cAAc,CAAC,GAAGE,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC;IACxE;EACJ;EACA;EACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACR,GAAG,EAAEC,OAAO,CAAC;EACrC,IAAIM,GAAG,CAACE,MAAM,IAAI,GAAG,EAAE,MAAMF,GAAG;EAChC,OAAOA,GAAG;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}